{"version":3,"sources":["webpack:///webpack/bootstrap 18c83fadc4d229f9a1b1","webpack:///./src/utils/index.js","webpack:///external \"path\"","webpack:///./src/dbOps.js","webpack:///./src/twitterConfig.js","webpack:///./src/utils/utils.js","webpack:///external \"babel-polyfill\"","webpack:///./src/server.js","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///./src/twitterBot.js","webpack:///external \"mongodb\"","webpack:///./src/processAnkiJson.js","webpack:///external \"fs\"","webpack:///external \"pngjs2\"","webpack:///external \"unzip-stream\"","webpack:///./src/utils/twitterUtils.js","webpack:///external \"twit\"","webpack:///external \"urlencode\"","webpack:///./src/api.js","webpack:///external \"multer\""],"names":["twitterUtils","require","utils","module","exports","MongoClient","url","process","env","MONGODB_URI","DB","MONGO_DB","processUpload","A_MONTH_AGO","A_WEEK_AGO","tryCatch","getRandomQuestion","Promise","resolve","reject","connect","mongo","newCards","db","collection","oldCards","findOne","randomCard","insert","remove","close","revealAnswerWorkflow","cardId","answerCard","removeLiveQuestion","addLiveQuestion","record","mediaUrls","liveQuestions","updateOne","$set","$unset","questionImg","prevLineImg","addMediaUrlsToCard","mediaUrl","$push","answerImg","updateLiveQuestion","questionId","userPoints","userId","points","update","alreadyAnswered","cachedPoints","getLiveQuestions","find","toArray","addOrUpdateUser","newUser","scoreboard","user","name","handle","avatar","profileBanner","following","adjustScore","req","res","getScores","sort","project","data","json","getScore","params","addDeck","filePath","file","path","batch","initializeUnorderedBulkOp","i","length","execute","redirect","getNewCards","getCollection","getOldCards","weeklyMonthlyReset","resetWeeklyScore","resetMonthlyScore","reset","weeklyScore","monthlyScore","multi","collectionName","_id","currentQuestion","addPointsToScoreboard","answerPostedAt","Date","getTime","ops","push","$inc","score","correctAnswers","bulkWrite","twit","TWITTER_API_KEY","TWITTER_API_SECRET","TWITTER_TOKEN","TWITTER_TOKEN_SECRET","TWITTER_ACCOUNT","userConfig","consumer_key","consumer_secret","access_token","access_token_secret","urlencode","WEBLOOKUP_URL","HOURS","formatQuestionAltText","expression","hint","formatHint","minMaxChars","min","max","minMax","s","screenReaderHint","replace","formatQuestionText","engMeaning","notes","cardID","tweetText","needsHint","formatAnswerAltText","formatAnswerText","answers","webLookup","answerText","join","addQuestionLink","questionLink","lines","split","splice","getAnswers","altAnswers","acceptedAnswer","match","otherAnswers","concat","calculateScore","questionPostedAt","timeToAnswer","Math","floor","extractAnswer","text","trim","slice","getTimeUntil","hour","now","millisUntilTime","getFullYear","getMonth","getDate","promise","then","catch","console","error","err","contains","item","list","valid","indexOf","index","maxChars","missingCharRegex","missingChars","gimmeChars","minChars","optionalChars","legend","normalized","groupMultiXs","groupXs","groupQuestionMarks","flatten","map","group","test","result","numChars","Number","negatedChars","string","p1","str","scalar","v","Array","isArray","deep","flat","head","tail","NODE_ENV","config","express","app","bodyParser","twitterBot","set","PORT","use","static","__dirname","listen","get","log","getFollowing","postMedia","Twitter","ANSWER_INTERVAL","QUESTION_INTERVAL","start","openStream","setInterval","tweetRandomQuestion","setStartTimes","timeUntil7PM","timeUntilMidnight","setTimeout","questionText","questionAltText","prevLineAltText","liveQuestion","tweetAnswer","answerAltText","stream","track","on","in_reply_to_status_id_str","created_at","id","screen_name","profile_image_url_https","profile_banner_url","foundQuestion","filter","obj","acceptedAnswers","userAnswer","disconnectMsg","getDay","fs","PNG","unzip","UPLOADS_PATH","parseAnkiJson","optimizeImages","zipfilePath","createReadStream","pipe","Extract","files","readdirSync","extractCardInfo","cleanUp","dirPath","filesProcessing","forEach","currentFile","contents","readFileSync","writeStream","createWriteStream","currentImage","rej","filterType","deflateLevel","parse","png","pack","all","allNewCards","stats","statSync","isFile","JSON","card","fields","stripHtml","getBase64","getSrc","base64","encoding","e","root","lstatSync","unlinkSync","isDirectory","deleteFolderRecursive","rootPath","existsSync","curPath","rmdirSync","status","b64Image1","altText1","b64Image2","altText2","uploadMedia","mediaId1","media_ids","mediaId2","unshift","tweet_mode","post","response","extended_entities","media","media_url_https","id_str","ids","b64Image","altText","media_data","mediaIdStr","media_id_string","meta_params","media_id","alt_text","upload","dest","next","header","single"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 18c83fadc4d229f9a1b1","const twitterUtils = require('./twitterUtils');\nconst utils = require('./utils');\n\nmodule.exports = {\n  ...twitterUtils,\n  ...utils\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 1\n// module chunks = 0","const MongoClient = require('mongodb').MongoClient;\nconst url = process.env.MONGODB_URI;\nconst DB = process.env.MONGO_DB;\nconst { processUpload } = require('./processAnkiJson');\nconst { A_MONTH_AGO, A_WEEK_AGO, tryCatch } = require('Utils');\n\nmodule.exports = {\n  getRandomQuestion() {\n    return new Promise(async (resolve, reject) => {\n      const mongo = await tryCatch(MongoClient.connect(url));\n      const newCards = mongo.db(DB).collection('newCards');\n      const oldCards = mongo.db(DB).collection('oldCards');\n      const randomCard = await tryCatch(newCards.findOne());\n      if (randomCard == null) {\n        reject(\"Empty deck. Please Add More Cards to DB.\");\n        return;\n      }\n      await tryCatch(oldCards.insert(randomCard));\n      await tryCatch(newCards.remove(randomCard));\n      resolve(randomCard);\n      mongo.close();\n    });\n  },\n\n  revealAnswerWorkflow(cardId) {\n    return new Promise(async (resolve, reject) => {\n      const mongo = await tryCatch(MongoClient.connect(url));\n      const oldCards = mongo.db(DB).collection('oldCards');\n      const answerCard = await tryCatch(oldCards.findOne({ cardId }));\n      resolve(answerCard);\n      await tryCatch(removeLiveQuestion(mongo, cardId));\n      mongo.close();\n    });\n  },\n\n  async addLiveQuestion(record, mediaUrls) {\n    const { cardId } = record;\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const liveQuestions = mongo.db(DB).collection('liveQuestions');\n    const oldCards = mongo.db(DB).collection('oldCards');\n    await tryCatch(liveQuestions.insert(record));\n    await tryCatch(\n      oldCards.updateOne(\n        {cardId},\n        {\n          $set: { mediaUrls },\n          $unset: { questionImg: '', prevLineImg: '' }\n        }\n      )\n    )\n    mongo.close();\n  },\n\n  async addMediaUrlsToCard(cardId, [mediaUrl]) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const oldCards = mongo.db(DB).collection('oldCards');\n    await tryCatch(\n      oldCards.updateOne(\n        {cardId},\n        {\n          $push: { mediaUrls: mediaUrl },\n          $unset: { answerImg: '' }\n        }\n      )\n    )\n    mongo.close();\n  },\n\n  async updateLiveQuestion(questionId, userPoints) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const liveQuestions = mongo.db(DB).collection('liveQuestions');\n    const { userId, points } = userPoints;\n    const update = {\n      $push: {\n        alreadyAnswered: userId,\n      }\n    };\n\n    if (points > 0)\n      update.$push.cachedPoints = userPoints;\n\n    await tryCatch(\n      liveQuestions.update({questionId}, update)\n    );\n    mongo.close();\n  },\n\n  getLiveQuestions() {\n    return new Promise(async (resolve, reject) => {\n      const mongo = await tryCatch(MongoClient.connect(url));\n      const collection = mongo.db(DB).collection('liveQuestions');\n      const liveQuestions = await tryCatch(collection.find().toArray());\n      resolve(liveQuestions);\n      mongo.close();\n    });\n  },\n\n  async addOrUpdateUser(newUser) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const scoreboard = mongo.db(DB).collection('scoreboard');\n    const { userId } = newUser;\n    const user = await tryCatch(scoreboard.findOne({userId}));\n    if (user) {\n      const {\n        name,\n        handle,\n        avatar,\n        profileBanner,\n        following\n      } = newUser;\n\n      await tryCatch(\n        scoreboard.updateOne({ userId }, {\n            $set: { name },\n            $set: { handle },\n            $set: { avatar },\n            $set: { profileBanner },\n            $set: { following }\n        })\n      );\n    } else {\n      await tryCatch(scoreboard.insert(newUser));\n    }\n    mongo.close();\n  },\n\n  adjustScore(req, res) {\n    // TODO adjust a score manually\n  },\n\n  async getScores(req, res) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('scoreboard');\n    const data = await tryCatch(\n      collection.find()\n                .sort('score', -1)\n                .project({'_id': 0})\n                .toArray()\n    );\n    res.json(data);\n    mongo.close();\n  },\n\n  async getScore(req, res) {\n    const { handle } = req.params;\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('scoreboard');\n    const user = await tryCatch(collection.findOne({handle}));\n    res.json(user);\n    mongo.close();\n  },\n\n  async addDeck(req, res) {\n    const filePath = req.file.path;\n    const newCards = await tryCatch(processUpload(filePath));\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('newCards');\n    const batch = collection.initializeUnorderedBulkOp();\n\n    for (let i = 0; i < newCards.length; ++i) {\n      batch.insert(newCards[i]);\n    }\n\n    await tryCatch(batch.execute());\n    mongo.close();\n\n    res.redirect('/');\n  },\n\n  getNewCards(req, res) {\n    getCollection(req, res, 'newCards');\n  },\n\n  getOldCards(req, res) {\n    getCollection(req, res, 'oldCards');\n  },\n\n  async weeklyMonthlyReset(resetWeeklyScore, resetMonthlyScore) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('scoreboard');\n\n    let reset;\n    if (resetWeeklyScore && resetMonthlyScore)\n      reset = {\n        $set: { weeklyScore:  0 },\n        $set: { monthlyScore: 0 }\n      };\n    else if (resetWeeklyScore)\n      reset = { $set: { weeklyScore: 0 } };\n    else\n      reset = { $set: { monthlyScore: 0 } };\n\n    collection.update(\n      {}, reset, { multi: true }\n    );\n\n    mongo.close();\n  }\n\n} // module.exports\n\n\nasync function getCollection(req, res, collectionName) {\n  const mongo = await tryCatch(MongoClient.connect(url));\n  const collection = mongo.db(DB).collection(collectionName);\n  const data = await tryCatch(\n    collection.find()\n              .project({_id: 0})\n              .toArray()\n  );\n  res.json(data);\n  mongo.close();\n}\n\nfunction removeLiveQuestion(mongo, cardId) {\n  return new Promise(async (resolve, reject) => {\n    const collection = mongo.db(DB).collection('liveQuestions');\n    const currentQuestion = await tryCatch(collection.findOne({cardId}));\n    await tryCatch(collection.remove(currentQuestion));\n    await tryCatch(addPointsToScoreboard(mongo, currentQuestion));\n    resolve();\n  });\n}\n\nfunction addPointsToScoreboard(mongo, { cachedPoints, cardId }) {\n  return new Promise(async (resolve, reject) => {\n    const scoreboard = mongo.db(DB).collection('scoreboard');\n    const answerPostedAt = new Date().getTime();\n    const ops = [];\n\n    for (let i = 0; i < cachedPoints.length; ++i) {\n      const { userId, points } = cachedPoints[i];\n      ops.push({\n        updateOne : {\n          \"filter\" : { userId },\n          \"update\" : {\n            $inc: {\n              score: points,\n              weeklyScore: points,\n              monthlyScore: points\n            },\n            $push: {\n              correctAnswers: {\n                answerPostedAt,\n                cardId,\n                points\n              }\n            }\n          }\n        }\n      });\n    }\n    if (ops.length === 0) {\n      resolve();\n      return;\n    }\n\n    await tryCatch(scoreboard.bulkWrite(ops));\n    resolve();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dbOps.js","const twit = require('twit');\nconst {\n  TWITTER_API_KEY,\n  TWITTER_API_SECRET,\n  TWITTER_TOKEN,\n  TWITTER_TOKEN_SECRET,\n  TWITTER_ACCOUNT\n} = process.env;\n\n// const appConfig = {\n//   consumer_key: TWITTER_API_KEY,\n//   consumer_secret: TWITTER_API_SECRET,\n//   app_only_auth: true\n// }\n\nconst userConfig = {\n  consumer_key: TWITTER_API_KEY,\n  consumer_secret: TWITTER_API_SECRET,\n  access_token: TWITTER_TOKEN,\n  access_token_secret: TWITTER_TOKEN_SECRET\n};\n\nmodule.exports = new twit(userConfig);\n\n\n\n// WEBPACK FOOTER //\n// ./src/twitterConfig.js","const urlencode = require('urlencode');\nconst WEBLOOKUP_URL = 'https://ejje.weblio.jp/content/';\nconst { TWITTER_ACCOUNT } = process.env;\n\nconst HOURS = 3600000;\n\nmodule.exports = {\n\n  HOURS,\n\n  formatQuestionAltText(expression) {\n    const hint = formatHint(expression);\n    const [min, max] = minMaxChars(hint);\n    const minMax = min === max ? min : `${min} to ${max}`;\n    const s = max > 1 ? 's' : '';\n    const screenReaderHint = `(${minMax} character${s})`;\n    return expression.replace(/\\{\\{.+?\\}\\}/g, screenReaderHint);\n  },\n\n  formatQuestionText(expression, engMeaning, notes, cardID) {\n    const hint = formatHint(expression);\n    const [min, max] = minMaxChars(hint);\n    const minMax = min === max ? min : `${min}-${max}`;\n    let tweetText = `What ${minMax} character answer means \"${engMeaning}\"?`;\n    if (needsHint(hint))\n      tweetText += `\\nHint: ${hint}`;\n\n    if (notes) tweetText += `\\nNotes: ${notes}`;\n\n    tweetText += `\\nQID${cardID}`;\n    return tweetText;\n  },\n\n  formatAnswerAltText(expression) {\n    return expression.replace(/\\{\\{.*?\\:\\:(.+?)\\:\\:.*?\\}\\}/g, '$1');\n  },\n\n  formatAnswerText(answers, engMeaning, webLookup, cardId) {\n    const s = answers.length > 1 ? 's' : '';\n    let answerText = `Answer${s}: ${answers.join(', ')}`;\n    answerText += `\\nEnglish Meaning: \"${engMeaning}\"`;\n    answerText += '\\nDefinition: ' + WEBLOOKUP_URL + urlencode(webLookup);\n    answerText += `\\nQID${cardId}`;\n    return answerText;\n  },\n\n  addQuestionLink(answerText, questionId) {\n    const questionLink = `Question: twitter.com/${TWITTER_ACCOUNT}/status/${questionId}`;\n    const lines = answerText.split('\\n');\n    lines.splice(-1, 0, questionLink);\n    return lines.join('\\n');\n  },\n\n  getAnswers(expression, altAnswers) {\n    const acceptedAnswer = expression.match(/\\:\\:(.+?)\\:\\:/)[1];\n    let otherAnswers = [];\n    if (altAnswers && altAnswers.length > 0)\n      otherAnswers = altAnswers.split(',');\n\n    return [acceptedAnswer].concat(otherAnswers);\n  },\n\n  calculateScore(answerPostedAt, {questionPostedAt, alreadyAnswered}) {\n    const timeToAnswer = Math.floor(\n      (new Date(answerPostedAt) - new Date(questionPostedAt)) / HOURS\n    );\n    const score = 24 - timeToAnswer;\n\n    return Math.max(score, 0);\n  },\n\n  extractAnswer(text) {\n    return text.trim().slice(TWITTER_ACCOUNT.length + 2);\n  },\n\n  getTimeUntil(hour) {\n    // https://stackoverflow.com/questions/4455282/call-a-javascript-function-at-a-specific-time-of-day\n    const now = new Date();\n    const millisUntilTime = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      hour, 0, 0, 0) - now;\n\n    if (millisUntilTime < 0) // already passed for today, wait until tomorrow\n      millisUntilTime += 24*HOURS;\n\n    return millisUntilTime;\n  },\n\n  tryCatch(promise) {\n   return promise\n     .then(data => data)\n     .catch(err => {\n       console.error('Error:',err);\n       return {};\n     });\n  },\n\n  contains(item, list) {\n    return valid(list.indexOf(item));\n  }\n\n} // module.exports\n\n\nfunction valid(index) {\n  return index !== -1;\n}\n\nfunction needsHint(hint) {\n  return hint.replace(/\\[\\]/g, '').trim().length !== 0;\n}\n\nfunction maxChars(hint) {\n  const missingCharRegex = /\\[.*?\\]/g;\n  const missingChars = (hint.match(missingCharRegex) || []).length\n  const gimmeChars = hint.replace(missingCharRegex, '').replace(/[\\s+\\(\\)]/g, '').length;\n\n  return missingChars + gimmeChars;\n}\n\nfunction minChars(hint) {\n  const optionalChars = (hint.match(/\\?/g) || []).length\n  return maxChars(hint) - optionalChars;\n}\n\nfunction minMaxChars(hint) {\n  return [minChars(hint), maxChars(hint)];\n}\n\nfunction formatHint(expression) {\n  const legend = expression.match(/\\:\\:.+?\\:\\:(.+?)\\}\\}/)[1];\n  const normalized = groupMultiXs(groupXs(groupQuestionMarks(legend)));\n\n  return flatten(split(normalized)).map(group => {\n    if (group === '.')\n      return '[]';\n\n    if (group === '-')\n      return '[] [] [] [] []'\n\n    if (/\\?/.test(group)) {\n      const result = [];\n      const numChars = Number(group.match(/\\d+/)[0])\n      for (let i = 0; i < numChars; i++)\n        result.push('[?]')\n\n      if (result.length === 1)\n        return '[?]';\n\n      return '(' + result.join(' ') + ')'\n    }\n\n    if (/≠/.test(group)) {\n      const negatedChars = group.replace(/≠/g, '');\n      return `[≠${negatedChars}]`\n    }\n    // else (character gimme)\n    return group;\n  }).join(' ');\n}\n\nfunction groupQuestionMarks(string) {\n  return string.replace(/(\\?+)/g, (match, p1) => `(${p1.length}?)`);\n}\n\nfunction groupXs(string) {\n  return string.replace(/≠[^(]/g, '($&)');\n}\n\nfunction groupMultiXs(string) {\n  return string.replace(/≠\\((.*)\\)/g, '(≠$1)')\n}\n\nfunction split(str) {\n  return str.split(/[\\(\\)]/)\n            .map(group =>\n              /\\?|≠/.test(group)\n              ? group\n              : group.split('')\n            );\n}\n\nfunction scalar(v) {\n  return !Array.isArray(v);\n}\n\nfunction flatten(deep, flat = []) {\n  if (deep.length === 0)\n    return flat;\n\n  let [head, ...tail] = deep;\n  return scalar(head)\n    ? flatten(tail, flat.concat(head))\n    : flatten(tail, flat.concat(flatten(head)));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 6\n// module chunks = 0","if (process.env.NODE_ENV == 'dev')\n  require('dotenv').config();\n\nconst express = require('express');\nconst app = express();\nconst path = require('path');\nconst bodyParser = require('body-parser');\nconst twitterBot = require('./twitterBot');\n\napp.set('port', (process.env.PORT || 3000));\napp.use(express.static(path.resolve(__dirname, '../dist')));\napp.use(bodyParser.json());\n\nrequire('./api')(app);\n\n//twitterBot.start();\n\napp.listen(app.get('port'), () =>\n  console.log('Listening on port', app.get('port'))\n);\n\nexports = module.exports = app;\n\n\n\n// WEBPACK FOOTER //\n// ./src/server.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 10\n// module chunks = 0","const DB = require('./dbOps');\nconst {\n  HOURS,\n  addQuestionLink,\n  calculateScore,\n  contains,\n  extractAnswer,\n  getFollowing,\n  getTimeUntil,\n  postMedia,\n  tryCatch\n} = require('Utils');\nconst Twitter = require('./twitterConfig');\nconst { TWITTER_ACCOUNT } = process.env;\n\nconst ANSWER_INTERVAL = 40000;\nlet QUESTION_INTERVAL = 10000;\n\nmodule.exports = {\n  start: () => {\n    openStream();\n    setInterval(tweetRandomQuestion, QUESTION_INTERVAL)\n  }\n  // start: () => {\n  //   openStream();\n  //   setStartTimes();\n  // }\n};\n\nfunction setStartTimes() {\n  const timeUntil7PM = getTimeUntil(19);\n  const timeUntilMidnight = getTimeUntil(0);\n\n  setTimeout(() => {\n    setInterval(tweetRandomQuestion, QUESTION_INTERVAL);\n  }, timeUntil7PM);\n\n  setTimeout(() => {\n    setInterval(weeklyMonthlyReset, 24*HOURS);\n  }, timeUntilMidnight);\n}\n\nasync function tweetRandomQuestion() {\n  const {\n    cardId,\n    questionText,\n    questionImg,\n    questionAltText,\n    prevLineImg,\n    prevLineAltText,\n    answers\n  } = await tryCatch(DB.getRandomQuestion());\n  if (!cardId) return;\n\n  const {\n    questionId,\n    questionPostedAt,\n    mediaUrls\n  } = await tryCatch(\n    postMedia(\n      questionText,\n      questionImg,\n      questionAltText,\n      prevLineImg,\n      prevLineAltText\n    )\n  );\n\n  const liveQuestion = {\n    cardId,\n    questionId,\n    answers,\n    questionPostedAt,\n    cachedPoints: [],\n    alreadyAnswered: []\n  };\n  DB.addLiveQuestion(liveQuestion, mediaUrls);\n  setTimeout(() => tweetAnswer(cardId, questionId), ANSWER_INTERVAL);\n}\n\nasync function tweetAnswer(cardId, questionId) {\n  const {\n    answerText,\n    answerImg,\n    answerAltText\n  } = await tryCatch(\n    // EFFECTS:\n    // - removes question from liveQuestions\n    // - adds cached points to scoreboard\n    //\n    // RETURNS:\n    // AnswerCard\n    DB.revealAnswerWorkflow(cardId)\n  );\n\n  const { mediaUrls } = await tryCatch(\n    postMedia(\n      addQuestionLink(answerText, questionId),\n      answerImg,\n      answerAltText\n    )\n  );\n\n  DB.addMediaUrlsToCard(cardId, mediaUrls);\n}\n\nfunction openStream() {\n  const stream = Twitter.stream('statuses/filter', { track: `@${TWITTER_ACCOUNT}` });\n\n  stream.on('tweet', async ({\n    in_reply_to_status_id_str: questionId,\n    created_at: answerPostedAt,\n    text,\n    user: {\n      id: userId,\n      name,\n      screen_name: handle,\n      profile_image_url_https: avatar,\n      profile_banner_url: profileBanner\n    }\n  }) => {\n    const liveQuestions = await tryCatch(DB.getLiveQuestions());\n    const foundQuestion = liveQuestions.filter(\n      obj => obj.questionId === questionId\n    )[0];\n\n    if (foundQuestion) {\n      const {\n        alreadyAnswered,\n        answers: acceptedAnswers\n      } = foundQuestion;\n      if (contains(userId, alreadyAnswered))\n        return;\n\n      const userAnswer = extractAnswer(text);\n      if (contains(userAnswer, acceptedAnswers)) {\n        const points = calculateScore(answerPostedAt, foundQuestion);\n        const following = await tryCatch(getFollowing(userId));\n        const newUser = {\n          userId,\n          name,\n          handle,\n          avatar,\n          profileBanner,\n          following,\n          score: 0,\n          monthlyScore: 0,\n          weeklyScore: 0,\n          correctAnswers: []\n        };\n        DB.addOrUpdateUser(newUser);\n        DB.updateLiveQuestion(questionId, { userId, points });\n\n      } else {\n        DB.updateLiveQuestion(questionId, { userId, points: 0 });\n      }\n    }\n  });\n\n  stream.on('disconnect', (disconnectMsg) => {\n    console.error('Tweet stream disconnected:', disconnectMsg);\n    setTimeout(() => stream.start(), 100);\n  });\n}\n\nfunction weeklyMonthlyReset() {\n  const now = Date.now();\n  const resetWeeklyScore = now.getDay() === 0;\n  const resetMonthlyScore = now.getDate() === 1;\n\n  if (resetWeeklyScore || resetMonthlyScore)\n    DB.weeklyMonthlyReset(resetWeeklyScore, resetMonthlyScore);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/twitterBot.js","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 12\n// module chunks = 0","const fs = require('fs');\nconst PNG = require('pngjs2').PNG;\nconst path = require('path');\nconst unzip = require('unzip-stream');\nconst UPLOADS_PATH = path.resolve(__dirname, '../uploads');\nconst {\n  formatQuestionAltText,\n  formatQuestionText,\n  formatAnswerAltText,\n  formatAnswerText,\n  getAnswers,\n  tryCatch\n} = require('Utils');\n\n\nmodule.exports = {\n  processUpload,\n  parseAnkiJson,\n  optimizeImages\n}\n\nfunction processUpload(zipfilePath) {\n  return new Promise(async (resolve, reject) => {\n    const stream = fs.createReadStream(zipfilePath)\n      .pipe(unzip.Extract({ path: 'uploads' }));\n\n    stream.on('close', async () => {\n      const files = fs.readdirSync(UPLOADS_PATH);\n      await tryCatch(optimizeImages(UPLOADS_PATH + '/media'));\n      console.log('Finished optimizing images!');\n      const newCards = extractCardInfo(files);\n\n      cleanUp(files);\n      resolve(newCards);\n    });\n  });\n}\n\nfunction optimizeImages(dirPath) {\n  return new Promise((resolve, reject) => {\n    const filesProcessing = [];\n    fs.readdirSync(dirPath).forEach(file => {\n      if (/.*\\.png$/.test(file)) {\n        const currentFile = dirPath + \"/\" + file;\n        const contents = fs.readFileSync(currentFile);\n        const writeStream = fs.createWriteStream(currentFile);\n        const currentImage = new Promise((res, rej) =>\n          writeStream.on('close', res)\n        );\n        filesProcessing.push(currentImage);\n        new PNG({ filterType: 4, deflateLevel: 1 })\n          .parse(contents, (err, png) => {\n            // Give upper left pixel an opacity\n            // of 254 so Twitter won't convert\n            // to jpeg\n            png.data[3] -= 1;\n            png.pack().pipe(writeStream);\n          });\n      }\n    });\n    Promise.all(filesProcessing).then(resolve);\n  });\n}\n\nfunction extractCardInfo(files) {\n  let allNewCards = [];\n  for (let file of files) {\n    const currentFile = `${UPLOADS_PATH}/${file}`;\n    const stats = fs.statSync(currentFile);\n\n    if (stats.isFile() && file.match(/.+\\.json$/)) {\n      const newCards = parseAnkiJson(currentFile);\n      allNewCards = allNewCards.concat(newCards);\n    }\n  }\n  return allNewCards;\n}\n\nfunction parseAnkiJson(filePath) {\n  const contents = JSON.parse(fs.readFileSync(filePath, 'utf8'));\n  return contents.notes.map(card => {\n    let [\n      expression,\n      , // reading,\n      ,// japMeaning,\n      engMeaning,\n      , // officialEng,\n      questionImg,\n      answerImg,\n      , // audio\n      prevLineImg,\n      prevLineAltText,\n      altAnswers,\n      webLookup, // use for every answer so people can look up pronunciation\n                 // https://ejje.weblio.jp/content/[webLookup (e.g. 切り換える)]\n      notes,\n      cardId\n    ] = card.fields;\n\n    [expression, engMeaning, notes] = [expression, engMeaning, notes].map(stripHtml);\n    const answers = getAnswers(expression, altAnswers);\n\n    return {\n      cardId,\n      questionText:    formatQuestionText(expression, engMeaning, notes, cardId),\n      questionImg:     getBase64(questionImg),\n      questionAltText: formatQuestionAltText(expression),\n      prevLineImg:     getBase64(prevLineImg),\n      prevLineAltText,\n      answerText:      formatAnswerText(answers, engMeaning, webLookup, cardId),\n      answerImg:       getBase64(answerImg),\n      answerAltText:   formatAnswerAltText(expression),\n      answers,\n      mediaUrls: []\n    };\n  });\n}\n\nfunction stripHtml(string) {\n  return string.replace(/<.*?>|&.*;/g, '');\n}\n\nfunction getSrc(string) {\n  return (string.match(/src=\"(.+)\"/) || [,])[1];\n}\n\nfunction getBase64(string) {\n  if (!string || string.length === 0) return;\n\n  let base64;\n  try {\n    base64 = fs.readFileSync(\n      `${UPLOADS_PATH}/media/${getSrc(string)}`,\n      { encoding: 'base64' }\n    );\n  } catch (e) {\n    // returning undefined...\n  }\n  return base64;\n}\n\nfunction cleanUp(files) {\n  for (let file of files) {\n    const root = `${UPLOADS_PATH}/${file}`;\n\n    if (fs.lstatSync(root).isFile())\n      fs.unlinkSync(root);\n    else if (fs.lstatSync(root).isDirectory())\n      deleteFolderRecursive(root);\n  }\n}\n\nfunction deleteFolderRecursive(rootPath) {\n  if (fs.existsSync(rootPath)) {\n    fs.readdirSync(rootPath).forEach(file => {\n      const curPath = rootPath + \"/\" + file;\n      if (fs.lstatSync(curPath).isDirectory()) { // recurse\n        deleteFolderRecursive(curPath);\n      } else { // delete file\n        fs.unlinkSync(curPath);\n      }\n    });\n    fs.rmdirSync(rootPath);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/processAnkiJson.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"pngjs2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pngjs2\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"unzip-stream\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"unzip-stream\"\n// module id = 16\n// module chunks = 0","const Twitter = require('../twitterConfig');\nconst { tryCatch } = require('Utils/utils');\n\nmodule.exports = {\n\n  //\n  // post a tweet with media\n  //\n  postMedia(status, b64Image1, altText1, b64Image2, altText2) {\n    return new Promise(async (resolve, reject) => {\n      const mediaId1 = await tryCatch(uploadMedia(b64Image1, altText1));\n      const media_ids = [mediaId1];\n      if (b64Image2) {\n        const mediaId2 = await tryCatch(uploadMedia(b64Image2, altText2));\n        media_ids.unshift(mediaId2);\n      }\n\n      const params = { status, media_ids, tweet_mode: 'extended' };\n      Twitter.post('statuses/update', params, (err, data, response) => {\n        if (err) {\n          console.error(err)\n          reject(\"Posting status failed.\");\n        };\n        const mediaUrls = data.extended_entities.media.map(\n          obj => obj.media_url_https\n        );\n        const result = {\n          questionId:       data.id_str,\n          questionPostedAt: data.created_at,\n          mediaUrls\n        };\n        resolve(result);\n      });\n    });\n  },\n\n  getFollowing(userId) {\n    return new Promise((resolve, reject) => {\n      Twitter.get('friends/ids', { userId }, (err, data, response) => {\n        if (err) console.error(err);\n        resolve(data.ids);\n      });\n    });\n  }\n\n} // module.exports\n\n\n// EFFECTS:\n// uploads a single image with altText to Twitter\n//\n// RETURNS:\n// media_id which is necessary for\n// attaching media to a tweet\n//\nfunction uploadMedia(b64Image, altText) {\n  return new Promise((resolve, reject) => {\n    // first we must post the media to Twitter\n    Twitter.post('media/upload', { media_data: b64Image }, (err, data, response) => {\n      if (err) {\n        console.error(err);\n        reject(\"Media upload failed.\")\n        return;\n      }\n      // now we can assign alt text to the media, for use by screen readers and\n      // other text-based presentations and interpreters\n      const mediaIdStr = data.media_id_string;\n      const meta_params = { media_id: mediaIdStr, alt_text: { text: altText } }\n\n      Twitter.post('media/metadata/create', meta_params, (err, data, response) => {\n        if (err) {\n          console.error(err);\n          reject(\"Media upload succeeded, media creation failed.\");\n        }\n        // now we can reference the media and post a tweet (media will attach to the tweet)\n        resolve(mediaIdStr);\n      });\n    });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/twitterUtils.js","module.exports = require(\"twit\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"twit\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"urlencode\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"urlencode\"\n// module id = 19\n// module chunks = 0","const DB = require('./dbOps');\nconst upload = require('multer')({ dest: 'uploads/' });\n\nmodule.exports = (app) => {\n\n  // CORS\n  app.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET, OPTIONS');\n    res.header('Access-Control-Max-Age', '86400'); // 24 hours\n    res.header('Access-Control-Allow-Headers',\n               'Origin, X-Requested-With, Content-Type, Accept');\n    next();\n  });\n\n  app.get('/api/scores', (req, res) => {\n    DB.getScores(req, res);\n  });\n\n  app.get('/api/score/:handle', (req, res) => {\n    DB.getScore(req, res);\n  });\n\n  app.get('/api/cards/old', (req, res) => {\n    DB.getOldCards(req, res);\n  });\n\n\n  // TODO - add authentication to following endpoints\n\n  app.post('/deck/new', upload.single('zipfile'), (req, res) => {\n    DB.addDeck(req, res);\n  });\n\n  app.post('/scores/edit', (req, res) => {\n    DB.adjustScore(req, res);\n  });\n\n  app.get('/cards/new', (req, res) => {\n    DB.getNewCards(req, res);\n  });\n\n} // module.exports\n\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 21\n// module chunks = 0"],"sourceRoot":""}