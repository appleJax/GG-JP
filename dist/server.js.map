{"version":3,"sources":["webpack:///server.js","webpack:///webpack/bootstrap c0dde35438aae8280a56","webpack:///./src/utils/index.js","webpack:///external \"path\"","webpack:///./src/dbOps.js","webpack:///./src/twitterConfig.js","webpack:///./src/utils/utils.js","webpack:///external \"babel-polyfill\"","webpack:///./src/server.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///./src/twitterBot.js","webpack:///external \"mongodb\"","webpack:///./src/processAnkiJson.js","webpack:///external \"fs\"","webpack:///external \"pngjs2\"","webpack:///external \"unzip-stream\"","webpack:///./src/utils/twitterUtils.js","webpack:///external \"twit\"","webpack:///external \"urlencode\"","webpack:///./src/api.js","webpack:///external \"multer\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","key","apply","this","twitterUtils","utils","require","_defineProperty","obj","value","writable","_sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_slicedToArray","Array","isArray","TypeError","_asyncToGenerator","fn","self","args","Promise","resolve","reject","step","arg","info","gen","error","then","_next","_throw","getCollection","_x22","_x23","_x24","_getCollection","regeneratorRuntime","mark","_callee14","req","res","collectionName","mongo","collection","data","wrap","_context14","prev","tryCatch","MongoClient","connect","url","sent","db","DB","find","project","_id","toArray","json","close","stop","removeLiveQuestion","cardId","_ref6","_callee12","currentQuestion","_context12","findOne","remove","addPointsToScoreboard","_x25","_x26","_ref7","cachedPoints","_ref8","_callee13","scoreboard","answerPostedAt","ops","_cachedPoints$i","userId","points","_context13","Date","getTime","updateOne","filter","update","$inc","score","weeklyScore","monthlyScore","$push","correctAnswers","abrupt","bulkWrite","_x27","_x28","process","env","MONGODB_URI","MONGO_DB","_require","processUpload","_require2","A_MONTH_AGO","A_WEEK_AGO","getRandomQuestion","_ref","_callee","newCards","oldCards","randomCard","_context","insert","_x","_x2","revealAnswerWorkflow","_ref2","_callee2","answerCard","_context2","_x3","_x4","addLiveQuestion","_addLiveQuestion","_callee3","record","mediaUrls","liveQuestions","_context3","$set","$unset","questionImg","prevLineImg","_x5","_x6","addMediaUrlsToCard","_addMediaUrlsToCard","_callee4","_ref3","_ref4","mediaUrl","_context4","answerImg","_x7","_x8","updateLiveQuestion","_updateLiveQuestion","_callee5","questionId","userPoints","_context5","alreadyAnswered","_x9","_x10","getLiveQuestions","_ref5","_callee6","_context6","_x11","_x12","addOrUpdateUser","_addOrUpdateUser","_callee7","newUser","user","_scoreboard$updateOne","handle","avatar","profileBanner","following","_context7","_x13","adjustScore","getScores","_getScores","_callee8","_context8","sort","_x14","_x15","getScore","_getScore","_callee9","_context9","params","_x16","_x17","addDeck","_addDeck","_callee10","filePath","batch","_context10","file","path","initializeUnorderedBulkOp","execute","redirect","_x18","_x19","getNewCards","getOldCards","weeklyMonthlyReset","_weeklyMonthlyReset","_callee11","resetWeeklyScore","resetMonthlyScore","reset","_context11","multi","_x20","_x21","twit","_process$env","TWITTER_API_KEY","TWITTER_API_SECRET","TWITTER_TOKEN","TWITTER_TOKEN_SECRET","userConfig","TWITTER_ACCOUNT","consumer_key","consumer_secret","access_token","access_token_secret","_toArray","from","_readOnlyError","Error","valid","index","needsHint","hint","replace","trim","maxChars","missingCharRegex","match","minChars","optionalChars","minMaxChars","formatHint","expression","flatten","split","groupMultiXs","groupXs","groupQuestionMarks","map","group","test","result","numChars","Number","join","concat","string","p1","str","scalar","v","deep","flat","_deep","head","tail","slice","urlencode","HOURS","formatQuestionAltText","_minMaxChars","_minMaxChars2","min","max","minMax","screenReaderHint","formatQuestionText","engMeaning","notes","cardID","_minMaxChars3","_minMaxChars4","tweetText","formatAnswerAltText","formatAnswerText","answers","webLookup","answerText","addQuestionLink","questionLink","lines","splice","getAnswers","altAnswers","acceptedAnswer","otherAnswers","calculateScore","questionPostedAt","timeToAnswer","Math","floor","extractAnswer","text","getTimeUntil","hour","now","millisUntilTime","getFullYear","getMonth","getDate","promise","catch","console","contains","item","list","indexOf","express","app","bodyParser","set","PORT","use","static","__dirname","listen","log","tweetRandomQuestion","_tweetRandomQuestion","questionText","questionAltText","prevLineAltText","liveQuestion","postMedia","setTimeout","tweetAnswer","ANSWER_INTERVAL","_tweetAnswer","answerAltText","openStream","stream","Twitter","track","on","_ref$user","foundQuestion","acceptedAnswers","userAnswer","in_reply_to_status_id_str","created_at","id","screen_name","profile_image_url_https","profile_banner_url","getFollowing","disconnectMsg","start","QUESTION_INTERVAL","setInterval","zipfilePath","fs","createReadStream","pipe","unzip","Extract","files","readdirSync","UPLOADS_PATH","optimizeImages","extractCardInfo","cleanUp","dirPath","filesProcessing","forEach","currentFile","contents","readFileSync","writeStream","createWriteStream","currentImage","rej","PNG","filterType","deflateLevel","parse","png","pack","all","allNewCards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","statSync","isFile","parseAnkiJson","return","JSON","card","_card$fields","fields","_map","stripHtml","_map2","getBase64","getSrc","base64","encoding","e","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","root","lstatSync","unlinkSync","isDirectory","deleteFolderRecursive","rootPath","existsSync","curPath","rmdirSync","uploadMedia","b64Image","altText","post","media_data","response","mediaIdStr","media_id_string","meta_params","media_id","alt_text","status","b64Image1","altText1","b64Image2","altText2","mediaId1","media_ids","mediaId2","unshift","tweet_mode","extended_entities","media","media_url_https","id_str","ids","upload","dest","header","single"],"mappings":"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","file":"server.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar twitterUtils = __webpack_require__(16);\n\nvar utils = __webpack_require__(4);\n\nmodule.exports = _extends({}, twitterUtils, utils);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"path\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\nvar MongoClient = __webpack_require__(11).MongoClient;\n\nvar url = process.env.MONGODB_URI;\nvar DB = process.env.MONGO_DB;\n\nvar _require = __webpack_require__(12),\n    processUpload = _require.processUpload;\n\nvar _require2 = __webpack_require__(0),\n    A_MONTH_AGO = _require2.A_MONTH_AGO,\n    A_WEEK_AGO = _require2.A_WEEK_AGO,\n    tryCatch = _require2.tryCatch;\n\nmodule.exports = {\n  getRandomQuestion: function getRandomQuestion() {\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var mongo, newCards, oldCards, randomCard;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return tryCatch(MongoClient.connect(url));\n\n              case 2:\n                mongo = _context.sent;\n                newCards = mongo.db(DB).collection('newCards');\n                oldCards = mongo.db(DB).collection('oldCards');\n                _context.next = 7;\n                return tryCatch(newCards.findOne());\n\n              case 7:\n                randomCard = _context.sent;\n\n                if (!(randomCard == null)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                reject(\"Empty deck. Please Add More Cards to DB.\");\n                return _context.abrupt(\"return\");\n\n              case 11:\n                _context.next = 13;\n                return tryCatch(oldCards.insert(randomCard));\n\n              case 13:\n                _context.next = 15;\n                return tryCatch(newCards.remove(randomCard));\n\n              case 15:\n                resolve(randomCard);\n                mongo.close();\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  },\n  revealAnswerWorkflow: function revealAnswerWorkflow(cardId) {\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(resolve, reject) {\n        var mongo, oldCards, answerCard;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return tryCatch(MongoClient.connect(url));\n\n              case 2:\n                mongo = _context2.sent;\n                oldCards = mongo.db(DB).collection('oldCards');\n                _context2.next = 6;\n                return tryCatch(oldCards.findOne({\n                  cardId: cardId\n                }));\n\n              case 6:\n                answerCard = _context2.sent;\n                resolve(answerCard);\n                _context2.next = 10;\n                return tryCatch(removeLiveQuestion(mongo, cardId));\n\n              case 10:\n                mongo.close();\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  },\n  addLiveQuestion: function () {\n    var _addLiveQuestion = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(record, mediaUrls) {\n      var cardId, mongo, liveQuestions, oldCards;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              cardId = record.cardId;\n              _context3.next = 3;\n              return tryCatch(MongoClient.connect(url));\n\n            case 3:\n              mongo = _context3.sent;\n              liveQuestions = mongo.db(DB).collection('liveQuestions');\n              oldCards = mongo.db(DB).collection('oldCards');\n              _context3.next = 8;\n              return tryCatch(liveQuestions.insert(record));\n\n            case 8:\n              _context3.next = 10;\n              return tryCatch(oldCards.updateOne({\n                cardId: cardId\n              }, {\n                $set: {\n                  mediaUrls: mediaUrls\n                },\n                $unset: {\n                  questionImg: '',\n                  prevLineImg: ''\n                }\n              }));\n\n            case 10:\n              mongo.close();\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function addLiveQuestion(_x5, _x6) {\n      return _addLiveQuestion.apply(this, arguments);\n    };\n  }(),\n  addMediaUrlsToCard: function () {\n    var _addMediaUrlsToCard = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(cardId, _ref3) {\n      var _ref4, mediaUrl, mongo, oldCards;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _ref4 = _slicedToArray(_ref3, 1), mediaUrl = _ref4[0];\n              _context4.next = 3;\n              return tryCatch(MongoClient.connect(url));\n\n            case 3:\n              mongo = _context4.sent;\n              oldCards = mongo.db(DB).collection('oldCards');\n              _context4.next = 7;\n              return tryCatch(oldCards.updateOne({\n                cardId: cardId\n              }, {\n                $push: {\n                  mediaUrls: mediaUrl\n                },\n                $unset: {\n                  answerImg: ''\n                }\n              }));\n\n            case 7:\n              mongo.close();\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function addMediaUrlsToCard(_x7, _x8) {\n      return _addMediaUrlsToCard.apply(this, arguments);\n    };\n  }(),\n  updateLiveQuestion: function () {\n    var _updateLiveQuestion = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(questionId, userPoints) {\n      var mongo, liveQuestions, userId, points, update;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return tryCatch(MongoClient.connect(url));\n\n            case 2:\n              mongo = _context5.sent;\n              liveQuestions = mongo.db(DB).collection('liveQuestions');\n              userId = userPoints.userId, points = userPoints.points;\n              update = {\n                $push: {\n                  alreadyAnswered: userId\n                }\n              };\n              if (points > 0) update.$push.cachedPoints = userPoints;\n              _context5.next = 9;\n              return tryCatch(liveQuestions.update({\n                questionId: questionId\n              }, update));\n\n            case 9:\n              mongo.close();\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    return function updateLiveQuestion(_x9, _x10) {\n      return _updateLiveQuestion.apply(this, arguments);\n    };\n  }(),\n  getLiveQuestions: function getLiveQuestions() {\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(resolve, reject) {\n        var mongo, collection, liveQuestions;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return tryCatch(MongoClient.connect(url));\n\n              case 2:\n                mongo = _context6.sent;\n                collection = mongo.db(DB).collection('liveQuestions');\n                _context6.next = 6;\n                return tryCatch(collection.find().toArray());\n\n              case 6:\n                liveQuestions = _context6.sent;\n                resolve(liveQuestions);\n                mongo.close();\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x11, _x12) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  },\n  addOrUpdateUser: function () {\n    var _addOrUpdateUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(newUser) {\n      var mongo, scoreboard, userId, user, _scoreboard$updateOne, name, handle, avatar, profileBanner, following;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return tryCatch(MongoClient.connect(url));\n\n            case 2:\n              mongo = _context7.sent;\n              scoreboard = mongo.db(DB).collection('scoreboard');\n              userId = newUser.userId;\n              _context7.next = 7;\n              return tryCatch(scoreboard.findOne({\n                userId: userId\n              }));\n\n            case 7:\n              user = _context7.sent;\n\n              if (!user) {\n                _context7.next = 14;\n                break;\n              }\n\n              name = newUser.name, handle = newUser.handle, avatar = newUser.avatar, profileBanner = newUser.profileBanner, following = newUser.following;\n              _context7.next = 12;\n              return tryCatch(scoreboard.updateOne({\n                userId: userId\n              }, (_scoreboard$updateOne = {\n                $set: {\n                  name: name\n                }\n              }, _defineProperty(_scoreboard$updateOne, \"$set\", {\n                handle: handle\n              }), _defineProperty(_scoreboard$updateOne, \"$set\", {\n                avatar: avatar\n              }), _defineProperty(_scoreboard$updateOne, \"$set\", {\n                profileBanner: profileBanner\n              }), _defineProperty(_scoreboard$updateOne, \"$set\", {\n                following: following\n              }), _scoreboard$updateOne)));\n\n            case 12:\n              _context7.next = 16;\n              break;\n\n            case 14:\n              _context7.next = 16;\n              return tryCatch(scoreboard.insert(newUser));\n\n            case 16:\n              mongo.close();\n\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n\n    return function addOrUpdateUser(_x13) {\n      return _addOrUpdateUser.apply(this, arguments);\n    };\n  }(),\n  adjustScore: function adjustScore(req, res) {// TODO adjust a score manually\n  },\n  getScores: function () {\n    var _getScores = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(req, res) {\n      var mongo, collection, data;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return tryCatch(MongoClient.connect(url));\n\n            case 2:\n              mongo = _context8.sent;\n              collection = mongo.db(DB).collection('scoreboard');\n              _context8.next = 6;\n              return tryCatch(collection.find().sort('score', -1).project({\n                '_id': 0\n              }).toArray());\n\n            case 6:\n              data = _context8.sent;\n              res.json(data);\n              mongo.close();\n\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n\n    return function getScores(_x14, _x15) {\n      return _getScores.apply(this, arguments);\n    };\n  }(),\n  getScore: function () {\n    var _getScore = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(req, res) {\n      var handle, mongo, collection, user;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              handle = req.params.handle;\n              _context9.next = 3;\n              return tryCatch(MongoClient.connect(url));\n\n            case 3:\n              mongo = _context9.sent;\n              collection = mongo.db(DB).collection('scoreboard');\n              _context9.next = 7;\n              return tryCatch(collection.findOne({\n                handle: handle\n              }));\n\n            case 7:\n              user = _context9.sent;\n              res.json(user);\n              mongo.close();\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    return function getScore(_x16, _x17) {\n      return _getScore.apply(this, arguments);\n    };\n  }(),\n  addDeck: function () {\n    var _addDeck = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(req, res) {\n      var filePath, newCards, mongo, collection, batch, i;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              filePath = req.file.path;\n              _context10.next = 3;\n              return tryCatch(processUpload(filePath));\n\n            case 3:\n              newCards = _context10.sent;\n              _context10.next = 6;\n              return tryCatch(MongoClient.connect(url));\n\n            case 6:\n              mongo = _context10.sent;\n              collection = mongo.db(DB).collection('newCards');\n              batch = collection.initializeUnorderedBulkOp();\n\n              for (i = 0; i < newCards.length; ++i) {\n                batch.insert(newCards[i]);\n              }\n\n              _context10.next = 12;\n              return tryCatch(batch.execute());\n\n            case 12:\n              mongo.close();\n              res.redirect('/');\n\n            case 14:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n\n    return function addDeck(_x18, _x19) {\n      return _addDeck.apply(this, arguments);\n    };\n  }(),\n  getNewCards: function getNewCards(req, res) {\n    getCollection(req, res, 'newCards');\n  },\n  getOldCards: function getOldCards(req, res) {\n    getCollection(req, res, 'oldCards');\n  },\n  weeklyMonthlyReset: function () {\n    var _weeklyMonthlyReset = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(resetWeeklyScore, resetMonthlyScore) {\n      var mongo, collection, reset;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return tryCatch(MongoClient.connect(url));\n\n            case 2:\n              mongo = _context11.sent;\n              collection = mongo.db(DB).collection('scoreboard');\n              if (resetWeeklyScore && resetMonthlyScore) reset = _defineProperty({\n                $set: {\n                  weeklyScore: 0\n                }\n              }, \"$set\", {\n                monthlyScore: 0\n              });else if (resetWeeklyScore) reset = {\n                $set: {\n                  weeklyScore: 0\n                }\n              };else reset = {\n                $set: {\n                  monthlyScore: 0\n                }\n              };\n              collection.update({}, reset, {\n                multi: true\n              });\n              mongo.close();\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, this);\n    }));\n\n    return function weeklyMonthlyReset(_x20, _x21) {\n      return _weeklyMonthlyReset.apply(this, arguments);\n    };\n  }()\n}; // module.exports\n\nfunction getCollection(_x22, _x23, _x24) {\n  return _getCollection.apply(this, arguments);\n}\n\nfunction _getCollection() {\n  _getCollection = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee14(req, res, collectionName) {\n    var mongo, collection, data;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return tryCatch(MongoClient.connect(url));\n\n          case 2:\n            mongo = _context14.sent;\n            collection = mongo.db(DB).collection(collectionName);\n            _context14.next = 6;\n            return tryCatch(collection.find().project({\n              _id: 0\n            }).toArray());\n\n          case 6:\n            data = _context14.sent;\n            res.json(data);\n            mongo.close();\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, this);\n  }));\n  return _getCollection.apply(this, arguments);\n}\n\nfunction removeLiveQuestion(mongo, cardId) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(resolve, reject) {\n      var collection, currentQuestion;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              collection = mongo.db(DB).collection('liveQuestions');\n              _context12.next = 3;\n              return tryCatch(collection.findOne({\n                cardId: cardId\n              }));\n\n            case 3:\n              currentQuestion = _context12.sent;\n              _context12.next = 6;\n              return tryCatch(collection.remove(currentQuestion));\n\n            case 6:\n              _context12.next = 8;\n              return tryCatch(addPointsToScoreboard(mongo, currentQuestion));\n\n            case 8:\n              resolve();\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, this);\n    }));\n\n    return function (_x25, _x26) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n}\n\nfunction addPointsToScoreboard(mongo, _ref7) {\n  var cachedPoints = _ref7.cachedPoints,\n      cardId = _ref7.cardId;\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref8 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee13(resolve, reject) {\n      var scoreboard, answerPostedAt, ops, i, _cachedPoints$i, userId, points;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              scoreboard = mongo.db(DB).collection('scoreboard');\n              answerPostedAt = new Date().getTime();\n              ops = [];\n\n              for (i = 0; i < cachedPoints.length; ++i) {\n                _cachedPoints$i = cachedPoints[i], userId = _cachedPoints$i.userId, points = _cachedPoints$i.points;\n                ops.push({\n                  updateOne: {\n                    \"filter\": {\n                      userId: userId\n                    },\n                    \"update\": {\n                      $inc: {\n                        score: points,\n                        weeklyScore: points,\n                        monthlyScore: points\n                      },\n                      $push: {\n                        correctAnswers: {\n                          answerPostedAt: answerPostedAt,\n                          cardId: cardId,\n                          points: points\n                        }\n                      }\n                    }\n                  }\n                });\n              }\n\n              if (!(ops.length === 0)) {\n                _context13.next = 7;\n                break;\n              }\n\n              resolve();\n              return _context13.abrupt(\"return\");\n\n            case 7:\n              _context13.next = 9;\n              return tryCatch(scoreboard.bulkWrite(ops));\n\n            case 9:\n              resolve();\n\n            case 10:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, this);\n    }));\n\n    return function (_x27, _x28) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar twit = __webpack_require__(17);\n\nvar _process$env = process.env,\n    TWITTER_API_KEY = _process$env.TWITTER_API_KEY,\n    TWITTER_API_SECRET = _process$env.TWITTER_API_SECRET,\n    TWITTER_TOKEN = _process$env.TWITTER_TOKEN,\n    TWITTER_TOKEN_SECRET = _process$env.TWITTER_TOKEN_SECRET,\n    TWITTER_ACCOUNT = _process$env.TWITTER_ACCOUNT; // const appConfig = {\n//   consumer_key: TWITTER_API_KEY,\n//   consumer_secret: TWITTER_API_SECRET,\n//   app_only_auth: true\n// }\n\nvar userConfig = {\n  consumer_key: TWITTER_API_KEY,\n  consumer_secret: TWITTER_API_SECRET,\n  access_token: TWITTER_TOKEN,\n  access_token_secret: TWITTER_TOKEN_SECRET\n};\nmodule.exports = new twit(userConfig);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _readOnlyError(name) { throw new Error(\"\\\"\" + name + \"\\\" is read-only\"); }\n\nfunction _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\nvar urlencode = __webpack_require__(18);\n\nvar WEBLOOKUP_URL = 'https://ejje.weblio.jp/content/';\nvar TWITTER_ACCOUNT = process.env.TWITTER_ACCOUNT;\nvar HOURS = 3600000;\nmodule.exports = {\n  HOURS: HOURS,\n  formatQuestionAltText: function formatQuestionAltText(expression) {\n    var hint = formatHint(expression);\n\n    var _minMaxChars = minMaxChars(hint),\n        _minMaxChars2 = _slicedToArray(_minMaxChars, 2),\n        min = _minMaxChars2[0],\n        max = _minMaxChars2[1];\n\n    var minMax = min === max ? min : \"\".concat(min, \" to \").concat(max);\n    var s = max > 1 ? 's' : '';\n    var screenReaderHint = \"(\".concat(minMax, \" character\").concat(s, \")\");\n    return expression.replace(/\\{\\{.+?\\}\\}/g, screenReaderHint);\n  },\n  formatQuestionText: function formatQuestionText(expression, engMeaning, notes, cardID) {\n    var hint = formatHint(expression);\n\n    var _minMaxChars3 = minMaxChars(hint),\n        _minMaxChars4 = _slicedToArray(_minMaxChars3, 2),\n        min = _minMaxChars4[0],\n        max = _minMaxChars4[1];\n\n    var minMax = min === max ? min : \"\".concat(min, \"-\").concat(max);\n    var tweetText = \"What \".concat(minMax, \" character answer means \\\"\").concat(engMeaning, \"\\\"?\");\n    if (needsHint(hint)) tweetText += \"\\nHint: \".concat(hint);\n    if (notes) tweetText += \"\\nNotes: \".concat(notes);\n    tweetText += \"\\nQID\".concat(cardID);\n    return tweetText;\n  },\n  formatAnswerAltText: function formatAnswerAltText(expression) {\n    return expression.replace(/\\{\\{.*?\\:\\:(.+?)\\:\\:.*?\\}\\}/g, '$1');\n  },\n  formatAnswerText: function formatAnswerText(answers, engMeaning, webLookup, cardId) {\n    var s = answers.length > 1 ? 's' : '';\n    var answerText = \"Answer\".concat(s, \": \").concat(answers.join(', '));\n    answerText += \"\\nEnglish Meaning: \\\"\".concat(engMeaning, \"\\\"\");\n    answerText += '\\nDefinition: ' + WEBLOOKUP_URL + urlencode(webLookup);\n    answerText += \"\\nQID\".concat(cardId);\n    return answerText;\n  },\n  addQuestionLink: function addQuestionLink(answerText, questionId) {\n    var questionLink = \"Question: twitter.com/\".concat(TWITTER_ACCOUNT, \"/status/\").concat(questionId);\n    var lines = answerText.split('\\n');\n    lines.splice(-1, 0, questionLink);\n    return lines.join('\\n');\n  },\n  getAnswers: function getAnswers(expression, altAnswers) {\n    var acceptedAnswer = expression.match(/\\:\\:(.+?)\\:\\:/)[1];\n    var otherAnswers = [];\n    if (altAnswers && altAnswers.length > 0) otherAnswers = altAnswers.split(',');\n    return [acceptedAnswer].concat(otherAnswers);\n  },\n  calculateScore: function calculateScore(answerPostedAt, _ref) {\n    var questionPostedAt = _ref.questionPostedAt,\n        alreadyAnswered = _ref.alreadyAnswered;\n    var timeToAnswer = Math.floor((new Date(answerPostedAt) - new Date(questionPostedAt)) / HOURS);\n    var score = 24 - timeToAnswer;\n    return Math.max(score, 0);\n  },\n  extractAnswer: function extractAnswer(text) {\n    return text.trim().slice(TWITTER_ACCOUNT.length + 2);\n  },\n  getTimeUntil: function getTimeUntil(hour) {\n    // https://stackoverflow.com/questions/4455282/call-a-javascript-function-at-a-specific-time-of-day\n    var now = new Date();\n    var millisUntilTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, 0, 0, 0) - now;\n    if (millisUntilTime < 0) // already passed for today, wait until tomorrow\n      millisUntilTime += (_readOnlyError(\"millisUntilTime\"), 24 * HOURS);\n    return millisUntilTime;\n  },\n  tryCatch: function tryCatch(promise) {\n    return promise.then(function (data) {\n      return data;\n    }).catch(function (err) {\n      console.error('Error:', err);\n      return {};\n    });\n  },\n  contains: function contains(item, list) {\n    return valid(list.indexOf(item));\n  }\n}; // module.exports\n\nfunction valid(index) {\n  return index !== -1;\n}\n\nfunction needsHint(hint) {\n  return hint.replace(/\\[\\]/g, '').trim().length !== 0;\n}\n\nfunction maxChars(hint) {\n  var missingCharRegex = /\\[.*?\\]/g;\n  var missingChars = (hint.match(missingCharRegex) || []).length;\n  var gimmeChars = hint.replace(missingCharRegex, '').replace(/[\\s+\\(\\)]/g, '').length;\n  return missingChars + gimmeChars;\n}\n\nfunction minChars(hint) {\n  var optionalChars = (hint.match(/\\?/g) || []).length;\n  return maxChars(hint) - optionalChars;\n}\n\nfunction minMaxChars(hint) {\n  return [minChars(hint), maxChars(hint)];\n}\n\nfunction formatHint(expression) {\n  var legend = expression.match(/\\:\\:.+?\\:\\:(.+?)\\}\\}/)[1];\n  var normalized = groupMultiXs(groupXs(groupQuestionMarks(legend)));\n  return flatten(split(normalized)).map(function (group) {\n    if (group === '.') return '[]';\n    if (group === '-') return '[] [] [] [] []';\n\n    if (/\\?/.test(group)) {\n      var result = [];\n      var numChars = Number(group.match(/\\d+/)[0]);\n\n      for (var i = 0; i < numChars; i++) {\n        result.push('[?]');\n      }\n\n      if (result.length === 1) return '[?]';\n      return '(' + result.join(' ') + ')';\n    }\n\n    if (/≠/.test(group)) {\n      var negatedChars = group.replace(/≠/g, '');\n      return \"[\\u2260\".concat(negatedChars, \"]\");\n    } // else (character gimme)\n\n\n    return group;\n  }).join(' ');\n}\n\nfunction groupQuestionMarks(string) {\n  return string.replace(/(\\?+)/g, function (match, p1) {\n    return \"(\".concat(p1.length, \"?)\");\n  });\n}\n\nfunction groupXs(string) {\n  return string.replace(/≠[^(]/g, '($&)');\n}\n\nfunction groupMultiXs(string) {\n  return string.replace(/≠\\((.*)\\)/g, '(≠$1)');\n}\n\nfunction split(str) {\n  return str.split(/[\\(\\)]/).map(function (group) {\n    return /\\?|≠/.test(group) ? group : group.split('');\n  });\n}\n\nfunction scalar(v) {\n  return !Array.isArray(v);\n}\n\nfunction flatten(deep) {\n  var flat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (deep.length === 0) return flat;\n\n  var _deep = _toArray(deep),\n      head = _deep[0],\n      tail = _deep.slice(1);\n\n  return scalar(head) ? flatten(tail, flat.concat(head)) : flatten(tail, flat.concat(flatten(head)));\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(6);\nmodule.exports = __webpack_require__(7);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"babel-polyfill\");\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nif (false) require('dotenv').config();\n\nvar express = __webpack_require__(8);\n\nvar app = express();\n\nvar path = __webpack_require__(1);\n\nvar bodyParser = __webpack_require__(9);\n\nvar twitterBot = __webpack_require__(10);\n\napp.set('port', process.env.PORT || 3000);\napp.use(express.static(path.resolve(__dirname, '../dist')));\napp.use(bodyParser.json());\n\n__webpack_require__(19)(app); //twitterBot.start();\n\n\napp.listen(app.get('port'), function () {\n  return console.log('Listening on port', app.get('port'));\n});\nexports = module.exports = app;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"body-parser\");\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\nvar DB = __webpack_require__(2);\n\nvar _require = __webpack_require__(0),\n    HOURS = _require.HOURS,\n    addQuestionLink = _require.addQuestionLink,\n    calculateScore = _require.calculateScore,\n    contains = _require.contains,\n    extractAnswer = _require.extractAnswer,\n    getFollowing = _require.getFollowing,\n    getTimeUntil = _require.getTimeUntil,\n    postMedia = _require.postMedia,\n    tryCatch = _require.tryCatch;\n\nvar Twitter = __webpack_require__(3);\n\nvar TWITTER_ACCOUNT = process.env.TWITTER_ACCOUNT;\nvar ANSWER_INTERVAL = 40000;\nvar QUESTION_INTERVAL = 10000;\nmodule.exports = {\n  start: function start() {\n    openStream();\n    setInterval(tweetRandomQuestion, QUESTION_INTERVAL);\n  } // start: () => {\n  //   openStream();\n  //   setStartTimes();\n  // }\n\n};\n\nfunction setStartTimes() {\n  var timeUntil7PM = getTimeUntil(19);\n  var timeUntilMidnight = getTimeUntil(0);\n  setTimeout(function () {\n    setInterval(tweetRandomQuestion, QUESTION_INTERVAL);\n  }, timeUntil7PM);\n  setTimeout(function () {\n    setInterval(weeklyMonthlyReset, 24 * HOURS);\n  }, timeUntilMidnight);\n}\n\nfunction tweetRandomQuestion() {\n  return _tweetRandomQuestion.apply(this, arguments);\n}\n\nfunction _tweetRandomQuestion() {\n  _tweetRandomQuestion = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var _ref3, cardId, questionText, questionImg, questionAltText, prevLineImg, prevLineAltText, answers, _ref4, questionId, questionPostedAt, mediaUrls, liveQuestion;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return tryCatch(DB.getRandomQuestion());\n\n          case 2:\n            _ref3 = _context2.sent;\n            cardId = _ref3.cardId;\n            questionText = _ref3.questionText;\n            questionImg = _ref3.questionImg;\n            questionAltText = _ref3.questionAltText;\n            prevLineImg = _ref3.prevLineImg;\n            prevLineAltText = _ref3.prevLineAltText;\n            answers = _ref3.answers;\n\n            if (cardId) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 12:\n            _context2.next = 14;\n            return tryCatch(postMedia(questionText, questionImg, questionAltText, prevLineImg, prevLineAltText));\n\n          case 14:\n            _ref4 = _context2.sent;\n            questionId = _ref4.questionId;\n            questionPostedAt = _ref4.questionPostedAt;\n            mediaUrls = _ref4.mediaUrls;\n            liveQuestion = {\n              cardId: cardId,\n              questionId: questionId,\n              answers: answers,\n              questionPostedAt: questionPostedAt,\n              cachedPoints: [],\n              alreadyAnswered: []\n            };\n            DB.addLiveQuestion(liveQuestion, mediaUrls);\n            setTimeout(function () {\n              return tweetAnswer(cardId, questionId);\n            }, ANSWER_INTERVAL);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _tweetRandomQuestion.apply(this, arguments);\n}\n\nfunction tweetAnswer(_x, _x2) {\n  return _tweetAnswer.apply(this, arguments);\n}\n\nfunction _tweetAnswer() {\n  _tweetAnswer = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(cardId, questionId) {\n    var _ref5, answerText, answerImg, answerAltText, _ref6, mediaUrls;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return tryCatch( // EFFECTS:\n            // - removes question from liveQuestions\n            // - adds cached points to scoreboard\n            //\n            // RETURNS:\n            // AnswerCard\n            DB.revealAnswerWorkflow(cardId));\n\n          case 2:\n            _ref5 = _context3.sent;\n            answerText = _ref5.answerText;\n            answerImg = _ref5.answerImg;\n            answerAltText = _ref5.answerAltText;\n            _context3.next = 8;\n            return tryCatch(postMedia(addQuestionLink(answerText, questionId), answerImg, answerAltText));\n\n          case 8:\n            _ref6 = _context3.sent;\n            mediaUrls = _ref6.mediaUrls;\n            DB.addMediaUrlsToCard(cardId, mediaUrls);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _tweetAnswer.apply(this, arguments);\n}\n\nfunction openStream() {\n  var stream = Twitter.stream('statuses/filter', {\n    track: \"@\".concat(TWITTER_ACCOUNT)\n  });\n  stream.on('tweet',\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var questionId, answerPostedAt, text, _ref$user, userId, name, handle, avatar, profileBanner, liveQuestions, foundQuestion, alreadyAnswered, acceptedAnswers, userAnswer, points, following, newUser;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              questionId = _ref.in_reply_to_status_id_str, answerPostedAt = _ref.created_at, text = _ref.text, _ref$user = _ref.user, userId = _ref$user.id, name = _ref$user.name, handle = _ref$user.screen_name, avatar = _ref$user.profile_image_url_https, profileBanner = _ref$user.profile_banner_url;\n              _context.next = 3;\n              return tryCatch(DB.getLiveQuestions());\n\n            case 3:\n              liveQuestions = _context.sent;\n              foundQuestion = liveQuestions.filter(function (obj) {\n                return obj.questionId === questionId;\n              })[0];\n\n              if (!foundQuestion) {\n                _context.next = 21;\n                break;\n              }\n\n              alreadyAnswered = foundQuestion.alreadyAnswered, acceptedAnswers = foundQuestion.answers;\n\n              if (!contains(userId, alreadyAnswered)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              userAnswer = extractAnswer(text);\n\n              if (!contains(userAnswer, acceptedAnswers)) {\n                _context.next = 20;\n                break;\n              }\n\n              points = calculateScore(answerPostedAt, foundQuestion);\n              _context.next = 14;\n              return tryCatch(getFollowing(userId));\n\n            case 14:\n              following = _context.sent;\n              newUser = {\n                userId: userId,\n                name: name,\n                handle: handle,\n                avatar: avatar,\n                profileBanner: profileBanner,\n                following: following,\n                score: 0,\n                monthlyScore: 0,\n                weeklyScore: 0,\n                correctAnswers: []\n              };\n              DB.addOrUpdateUser(newUser);\n              DB.updateLiveQuestion(questionId, {\n                userId: userId,\n                points: points\n              });\n              _context.next = 21;\n              break;\n\n            case 20:\n              DB.updateLiveQuestion(questionId, {\n                userId: userId,\n                points: 0\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  stream.on('disconnect', function (disconnectMsg) {\n    console.error('Tweet stream disconnected:', disconnectMsg);\n    setTimeout(function () {\n      return stream.start();\n    }, 100);\n  });\n}\n\nfunction weeklyMonthlyReset() {\n  var now = Date.now();\n  var resetWeeklyScore = now.getDay() === 0;\n  var resetMonthlyScore = now.getDate() === 1;\n  if (resetWeeklyScore || resetMonthlyScore) DB.weeklyMonthlyReset(resetWeeklyScore, resetMonthlyScore);\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"mongodb\");\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\nvar fs = __webpack_require__(13);\n\nvar PNG = __webpack_require__(14).PNG;\n\nvar path = __webpack_require__(1);\n\nvar unzip = __webpack_require__(15);\n\nvar UPLOADS_PATH = path.resolve(__dirname, '../uploads');\n\nvar _require = __webpack_require__(0),\n    formatQuestionAltText = _require.formatQuestionAltText,\n    formatQuestionText = _require.formatQuestionText,\n    formatAnswerAltText = _require.formatAnswerAltText,\n    formatAnswerText = _require.formatAnswerText,\n    getAnswers = _require.getAnswers,\n    tryCatch = _require.tryCatch;\n\nmodule.exports = {\n  processUpload: processUpload,\n  parseAnkiJson: parseAnkiJson,\n  optimizeImages: optimizeImages\n};\n\nfunction processUpload(zipfilePath) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(resolve, reject) {\n      var stream;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              stream = fs.createReadStream(zipfilePath).pipe(unzip.Extract({\n                path: 'uploads'\n              }));\n              stream.on('close',\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                var files, newCards;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        files = fs.readdirSync(UPLOADS_PATH);\n                        _context.next = 3;\n                        return tryCatch(optimizeImages(UPLOADS_PATH + '/media'));\n\n                      case 3:\n                        console.log('Finished optimizing images!');\n                        newCards = extractCardInfo(files);\n                        cleanUp(files);\n                        resolve(newCards);\n\n                      case 7:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, this);\n              })));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nfunction optimizeImages(dirPath) {\n  return new Promise(function (resolve, reject) {\n    var filesProcessing = [];\n    fs.readdirSync(dirPath).forEach(function (file) {\n      if (/.*\\.png$/.test(file)) {\n        var currentFile = dirPath + \"/\" + file;\n        var contents = fs.readFileSync(currentFile);\n        var writeStream = fs.createWriteStream(currentFile);\n        var currentImage = new Promise(function (res, rej) {\n          return writeStream.on('close', res);\n        });\n        filesProcessing.push(currentImage);\n        new PNG({\n          filterType: 4,\n          deflateLevel: 1\n        }).parse(contents, function (err, png) {\n          // Give upper left pixel an opacity\n          // of 254 so Twitter won't convert\n          // to jpeg\n          png.data[3] -= 1;\n          png.pack().pipe(writeStream);\n        });\n      }\n    });\n    Promise.all(filesProcessing).then(resolve);\n  });\n}\n\nfunction extractCardInfo(files) {\n  var allNewCards = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _file = _step.value;\n      var currentFile = \"\".concat(UPLOADS_PATH, \"/\").concat(_file);\n      var stats = fs.statSync(currentFile);\n\n      if (stats.isFile() && _file.match(/.+\\.json$/)) {\n        var newCards = parseAnkiJson(currentFile);\n        allNewCards = allNewCards.concat(newCards);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return allNewCards;\n}\n\nfunction parseAnkiJson(filePath) {\n  var contents = JSON.parse(fs.readFileSync(filePath, 'utf8'));\n  return contents.notes.map(function (card) {\n    var _card$fields = _slicedToArray(card.fields, 14),\n        expression = _card$fields[0],\n        // reading,\n    // japMeaning,\n    engMeaning = _card$fields[3],\n        // officialEng,\n    questionImg = _card$fields[5],\n        answerImg = _card$fields[6],\n        // audio\n    prevLineImg = _card$fields[8],\n        prevLineAltText = _card$fields[9],\n        altAnswers = _card$fields[10],\n        webLookup = _card$fields[11],\n        // use for every answer so people can look up pronunciation\n    // https://ejje.weblio.jp/content/[webLookup (e.g. 切り換える)]\n    notes = _card$fields[12],\n        cardId = _card$fields[13];\n\n    var _map = [expression, engMeaning, notes].map(stripHtml);\n\n    var _map2 = _slicedToArray(_map, 3);\n\n    expression = _map2[0];\n    engMeaning = _map2[1];\n    notes = _map2[2];\n    var answers = getAnswers(expression, altAnswers);\n    return {\n      cardId: cardId,\n      questionText: formatQuestionText(expression, engMeaning, notes, cardId),\n      questionImg: getBase64(questionImg),\n      questionAltText: formatQuestionAltText(expression),\n      prevLineImg: getBase64(prevLineImg),\n      prevLineAltText: prevLineAltText,\n      answerText: formatAnswerText(answers, engMeaning, webLookup, cardId),\n      answerImg: getBase64(answerImg),\n      answerAltText: formatAnswerAltText(expression),\n      answers: answers,\n      mediaUrls: []\n    };\n  });\n}\n\nfunction stripHtml(string) {\n  return string.replace(/<.*?>|&.*;/g, '');\n}\n\nfunction getSrc(string) {\n  return (string.match(/src=\"(.+)\"/) || [,])[1];\n}\n\nfunction getBase64(string) {\n  if (!string || string.length === 0) return;\n  var base64;\n\n  try {\n    base64 = fs.readFileSync(\"\".concat(UPLOADS_PATH, \"/media/\").concat(getSrc(string)), {\n      encoding: 'base64'\n    });\n  } catch (e) {// returning undefined...\n  }\n\n  return base64;\n}\n\nfunction cleanUp(files) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = files[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _file2 = _step2.value;\n      var root = \"\".concat(UPLOADS_PATH, \"/\").concat(_file2);\n      if (fs.lstatSync(root).isFile()) fs.unlinkSync(root);else if (fs.lstatSync(root).isDirectory()) deleteFolderRecursive(root);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\nfunction deleteFolderRecursive(rootPath) {\n  if (fs.existsSync(rootPath)) {\n    fs.readdirSync(rootPath).forEach(function (file) {\n      var curPath = rootPath + \"/\" + file;\n\n      if (fs.lstatSync(curPath).isDirectory()) {\n        // recurse\n        deleteFolderRecursive(curPath);\n      } else {\n        // delete file\n        fs.unlinkSync(curPath);\n      }\n    });\n    fs.rmdirSync(rootPath);\n  }\n}\n\n;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"fs\");\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"pngjs2\");\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"unzip-stream\");\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } } function _next(value) { step(\"next\", value); } function _throw(err) { step(\"throw\", err); } _next(); }); }; }\n\nvar Twitter = __webpack_require__(3);\n\nvar _require = __webpack_require__(4),\n    tryCatch = _require.tryCatch;\n\nmodule.exports = {\n  //\n  // post a tweet with media\n  //\n  postMedia: function postMedia(status, b64Image1, altText1, b64Image2, altText2) {\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var mediaId1, media_ids, mediaId2, params;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return tryCatch(uploadMedia(b64Image1, altText1));\n\n              case 2:\n                mediaId1 = _context.sent;\n                media_ids = [mediaId1];\n\n                if (!b64Image2) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 7;\n                return tryCatch(uploadMedia(b64Image2, altText2));\n\n              case 7:\n                mediaId2 = _context.sent;\n                media_ids.unshift(mediaId2);\n\n              case 9:\n                params = {\n                  status: status,\n                  media_ids: media_ids,\n                  tweet_mode: 'extended'\n                };\n                Twitter.post('statuses/update', params, function (err, data, response) {\n                  if (err) {\n                    console.error(err);\n                    reject(\"Posting status failed.\");\n                  }\n\n                  ;\n                  var mediaUrls = data.extended_entities.media.map(function (obj) {\n                    return obj.media_url_https;\n                  });\n                  var result = {\n                    questionId: data.id_str,\n                    questionPostedAt: data.created_at,\n                    mediaUrls: mediaUrls\n                  };\n                  resolve(result);\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  },\n  getFollowing: function getFollowing(userId) {\n    return new Promise(function (resolve, reject) {\n      Twitter.get('friends/ids', {\n        userId: userId\n      }, function (err, data, response) {\n        if (err) console.error(err);\n        resolve(data.ids);\n      });\n    });\n  }\n}; // module.exports\n// EFFECTS:\n// uploads a single image with altText to Twitter\n//\n// RETURNS:\n// media_id which is necessary for\n// attaching media to a tweet\n//\n\nfunction uploadMedia(b64Image, altText) {\n  return new Promise(function (resolve, reject) {\n    // first we must post the media to Twitter\n    Twitter.post('media/upload', {\n      media_data: b64Image\n    }, function (err, data, response) {\n      if (err) {\n        console.error(err);\n        reject(\"Media upload failed.\");\n        return;\n      } // now we can assign alt text to the media, for use by screen readers and\n      // other text-based presentations and interpreters\n\n\n      var mediaIdStr = data.media_id_string;\n      var meta_params = {\n        media_id: mediaIdStr,\n        alt_text: {\n          text: altText\n        }\n      };\n      Twitter.post('media/metadata/create', meta_params, function (err, data, response) {\n        if (err) {\n          console.error(err);\n          reject(\"Media upload succeeded, media creation failed.\");\n        } // now we can reference the media and post a tweet (media will attach to the tweet)\n\n\n        resolve(mediaIdStr);\n      });\n    });\n  });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"twit\");\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"urlencode\");\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DB = __webpack_require__(2);\n\nvar upload = __webpack_require__(20)({\n  dest: 'uploads/'\n});\n\nmodule.exports = function (app) {\n  // CORS\n  app.use(function (req, res, next) {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET, OPTIONS');\n    res.header('Access-Control-Max-Age', '86400'); // 24 hours\n\n    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n    next();\n  });\n  app.get('/api/scores', function (req, res) {\n    DB.getScores(req, res);\n  });\n  app.get('/api/score/:handle', function (req, res) {\n    DB.getScore(req, res);\n  });\n  app.get('/api/cards/old', function (req, res) {\n    DB.getOldCards(req, res);\n  }); // TODO - add authentication to following endpoints\n\n  app.post('/deck/new', upload.single('zipfile'), function (req, res) {\n    DB.addDeck(req, res);\n  });\n  app.post('/scores/edit', function (req, res) {\n    DB.adjustScore(req, res);\n  });\n  app.get('/cards/new', function (req, res) {\n    DB.getNewCards(req, res);\n  });\n}; // module.exports\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"multer\");\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// server.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c0dde35438aae8280a56","const twitterUtils = require('./twitterUtils');\nconst utils = require('./utils');\n\nmodule.exports = {\n  ...twitterUtils,\n  ...utils\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 1\n// module chunks = 0","const MongoClient = require('mongodb').MongoClient;\nconst url = process.env.MONGODB_URI;\nconst DB = process.env.MONGO_DB;\nconst { processUpload } = require('./processAnkiJson');\nconst { A_MONTH_AGO, A_WEEK_AGO, tryCatch } = require('Utils');\n\nmodule.exports = {\n  getRandomQuestion() {\n    return new Promise(async (resolve, reject) => {\n      const mongo = await tryCatch(MongoClient.connect(url));\n      const newCards = mongo.db(DB).collection('newCards');\n      const oldCards = mongo.db(DB).collection('oldCards');\n      const randomCard = await tryCatch(newCards.findOne());\n      if (randomCard == null) {\n        reject(\"Empty deck. Please Add More Cards to DB.\");\n        return;\n      }\n      await tryCatch(oldCards.insert(randomCard));\n      await tryCatch(newCards.remove(randomCard));\n      resolve(randomCard);\n      mongo.close();\n    });\n  },\n\n  revealAnswerWorkflow(cardId) {\n    return new Promise(async (resolve, reject) => {\n      const mongo = await tryCatch(MongoClient.connect(url));\n      const oldCards = mongo.db(DB).collection('oldCards');\n      const answerCard = await tryCatch(oldCards.findOne({ cardId }));\n      resolve(answerCard);\n      await tryCatch(removeLiveQuestion(mongo, cardId));\n      mongo.close();\n    });\n  },\n\n  async addLiveQuestion(record, mediaUrls) {\n    const { cardId } = record;\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const liveQuestions = mongo.db(DB).collection('liveQuestions');\n    const oldCards = mongo.db(DB).collection('oldCards');\n    await tryCatch(liveQuestions.insert(record));\n    await tryCatch(\n      oldCards.updateOne(\n        {cardId},\n        {\n          $set: { mediaUrls },\n          $unset: { questionImg: '', prevLineImg: '' }\n        }\n      )\n    )\n    mongo.close();\n  },\n\n  async addMediaUrlsToCard(cardId, [mediaUrl]) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const oldCards = mongo.db(DB).collection('oldCards');\n    await tryCatch(\n      oldCards.updateOne(\n        {cardId},\n        {\n          $push: { mediaUrls: mediaUrl },\n          $unset: { answerImg: '' }\n        }\n      )\n    )\n    mongo.close();\n  },\n\n  async updateLiveQuestion(questionId, userPoints) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const liveQuestions = mongo.db(DB).collection('liveQuestions');\n    const { userId, points } = userPoints;\n    const update = {\n      $push: {\n        alreadyAnswered: userId,\n      }\n    };\n\n    if (points > 0)\n      update.$push.cachedPoints = userPoints;\n\n    await tryCatch(\n      liveQuestions.update({questionId}, update)\n    );\n    mongo.close();\n  },\n\n  getLiveQuestions() {\n    return new Promise(async (resolve, reject) => {\n      const mongo = await tryCatch(MongoClient.connect(url));\n      const collection = mongo.db(DB).collection('liveQuestions');\n      const liveQuestions = await tryCatch(collection.find().toArray());\n      resolve(liveQuestions);\n      mongo.close();\n    });\n  },\n\n  async addOrUpdateUser(newUser) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const scoreboard = mongo.db(DB).collection('scoreboard');\n    const { userId } = newUser;\n    const user = await tryCatch(scoreboard.findOne({userId}));\n    if (user) {\n      const {\n        name,\n        handle,\n        avatar,\n        profileBanner,\n        following\n      } = newUser;\n\n      await tryCatch(\n        scoreboard.updateOne({ userId }, {\n            $set: { name },\n            $set: { handle },\n            $set: { avatar },\n            $set: { profileBanner },\n            $set: { following }\n        })\n      );\n    } else {\n      await tryCatch(scoreboard.insert(newUser));\n    }\n    mongo.close();\n  },\n\n  adjustScore(req, res) {\n    // TODO adjust a score manually\n  },\n\n  async getScores(req, res) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('scoreboard');\n    const data = await tryCatch(\n      collection.find()\n                .sort('score', -1)\n                .project({'_id': 0})\n                .toArray()\n    );\n    res.json(data);\n    mongo.close();\n  },\n\n  async getScore(req, res) {\n    const { handle } = req.params;\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('scoreboard');\n    const user = await tryCatch(collection.findOne({handle}));\n    res.json(user);\n    mongo.close();\n  },\n\n  async addDeck(req, res) {\n    const filePath = req.file.path;\n    const newCards = await tryCatch(processUpload(filePath));\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('newCards');\n    const batch = collection.initializeUnorderedBulkOp();\n\n    for (let i = 0; i < newCards.length; ++i) {\n      batch.insert(newCards[i]);\n    }\n\n    await tryCatch(batch.execute());\n    mongo.close();\n\n    res.redirect('/');\n  },\n\n  getNewCards(req, res) {\n    getCollection(req, res, 'newCards');\n  },\n\n  getOldCards(req, res) {\n    getCollection(req, res, 'oldCards');\n  },\n\n  async weeklyMonthlyReset(resetWeeklyScore, resetMonthlyScore) {\n    const mongo = await tryCatch(MongoClient.connect(url));\n    const collection = mongo.db(DB).collection('scoreboard');\n\n    let reset;\n    if (resetWeeklyScore && resetMonthlyScore)\n      reset = {\n        $set: { weeklyScore:  0 },\n        $set: { monthlyScore: 0 }\n      };\n    else if (resetWeeklyScore)\n      reset = { $set: { weeklyScore: 0 } };\n    else\n      reset = { $set: { monthlyScore: 0 } };\n\n    collection.update(\n      {}, reset, { multi: true }\n    );\n\n    mongo.close();\n  }\n\n} // module.exports\n\n\nasync function getCollection(req, res, collectionName) {\n  const mongo = await tryCatch(MongoClient.connect(url));\n  const collection = mongo.db(DB).collection(collectionName);\n  const data = await tryCatch(\n    collection.find()\n              .project({_id: 0})\n              .toArray()\n  );\n  res.json(data);\n  mongo.close();\n}\n\nfunction removeLiveQuestion(mongo, cardId) {\n  return new Promise(async (resolve, reject) => {\n    const collection = mongo.db(DB).collection('liveQuestions');\n    const currentQuestion = await tryCatch(collection.findOne({cardId}));\n    await tryCatch(collection.remove(currentQuestion));\n    await tryCatch(addPointsToScoreboard(mongo, currentQuestion));\n    resolve();\n  });\n}\n\nfunction addPointsToScoreboard(mongo, { cachedPoints, cardId }) {\n  return new Promise(async (resolve, reject) => {\n    const scoreboard = mongo.db(DB).collection('scoreboard');\n    const answerPostedAt = new Date().getTime();\n    const ops = [];\n\n    for (let i = 0; i < cachedPoints.length; ++i) {\n      const { userId, points } = cachedPoints[i];\n      ops.push({\n        updateOne : {\n          \"filter\" : { userId },\n          \"update\" : {\n            $inc: {\n              score: points,\n              weeklyScore: points,\n              monthlyScore: points\n            },\n            $push: {\n              correctAnswers: {\n                answerPostedAt,\n                cardId,\n                points\n              }\n            }\n          }\n        }\n      });\n    }\n    if (ops.length === 0) {\n      resolve();\n      return;\n    }\n\n    await tryCatch(scoreboard.bulkWrite(ops));\n    resolve();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dbOps.js","const twit = require('twit');\nconst {\n  TWITTER_API_KEY,\n  TWITTER_API_SECRET,\n  TWITTER_TOKEN,\n  TWITTER_TOKEN_SECRET,\n  TWITTER_ACCOUNT\n} = process.env;\n\n// const appConfig = {\n//   consumer_key: TWITTER_API_KEY,\n//   consumer_secret: TWITTER_API_SECRET,\n//   app_only_auth: true\n// }\n\nconst userConfig = {\n  consumer_key: TWITTER_API_KEY,\n  consumer_secret: TWITTER_API_SECRET,\n  access_token: TWITTER_TOKEN,\n  access_token_secret: TWITTER_TOKEN_SECRET\n};\n\nmodule.exports = new twit(userConfig);\n\n\n\n// WEBPACK FOOTER //\n// ./src/twitterConfig.js","const urlencode = require('urlencode');\nconst WEBLOOKUP_URL = 'https://ejje.weblio.jp/content/';\nconst { TWITTER_ACCOUNT } = process.env;\n\nconst HOURS = 3600000;\n\nmodule.exports = {\n\n  HOURS,\n\n  formatQuestionAltText(expression) {\n    const hint = formatHint(expression);\n    const [min, max] = minMaxChars(hint);\n    const minMax = min === max ? min : `${min} to ${max}`;\n    const s = max > 1 ? 's' : '';\n    const screenReaderHint = `(${minMax} character${s})`;\n    return expression.replace(/\\{\\{.+?\\}\\}/g, screenReaderHint);\n  },\n\n  formatQuestionText(expression, engMeaning, notes, cardID) {\n    const hint = formatHint(expression);\n    const [min, max] = minMaxChars(hint);\n    const minMax = min === max ? min : `${min}-${max}`;\n    let tweetText = `What ${minMax} character answer means \"${engMeaning}\"?`;\n    if (needsHint(hint))\n      tweetText += `\\nHint: ${hint}`;\n\n    if (notes) tweetText += `\\nNotes: ${notes}`;\n\n    tweetText += `\\nQID${cardID}`;\n    return tweetText;\n  },\n\n  formatAnswerAltText(expression) {\n    return expression.replace(/\\{\\{.*?\\:\\:(.+?)\\:\\:.*?\\}\\}/g, '$1');\n  },\n\n  formatAnswerText(answers, engMeaning, webLookup, cardId) {\n    const s = answers.length > 1 ? 's' : '';\n    let answerText = `Answer${s}: ${answers.join(', ')}`;\n    answerText += `\\nEnglish Meaning: \"${engMeaning}\"`;\n    answerText += '\\nDefinition: ' + WEBLOOKUP_URL + urlencode(webLookup);\n    answerText += `\\nQID${cardId}`;\n    return answerText;\n  },\n\n  addQuestionLink(answerText, questionId) {\n    const questionLink = `Question: twitter.com/${TWITTER_ACCOUNT}/status/${questionId}`;\n    const lines = answerText.split('\\n');\n    lines.splice(-1, 0, questionLink);\n    return lines.join('\\n');\n  },\n\n  getAnswers(expression, altAnswers) {\n    const acceptedAnswer = expression.match(/\\:\\:(.+?)\\:\\:/)[1];\n    let otherAnswers = [];\n    if (altAnswers && altAnswers.length > 0)\n      otherAnswers = altAnswers.split(',');\n\n    return [acceptedAnswer].concat(otherAnswers);\n  },\n\n  calculateScore(answerPostedAt, {questionPostedAt, alreadyAnswered}) {\n    const timeToAnswer = Math.floor(\n      (new Date(answerPostedAt) - new Date(questionPostedAt)) / HOURS\n    );\n    const score = 24 - timeToAnswer;\n\n    return Math.max(score, 0);\n  },\n\n  extractAnswer(text) {\n    return text.trim().slice(TWITTER_ACCOUNT.length + 2);\n  },\n\n  getTimeUntil(hour) {\n    // https://stackoverflow.com/questions/4455282/call-a-javascript-function-at-a-specific-time-of-day\n    const now = new Date();\n    const millisUntilTime = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      hour, 0, 0, 0) - now;\n\n    if (millisUntilTime < 0) // already passed for today, wait until tomorrow\n      millisUntilTime += 24*HOURS;\n\n    return millisUntilTime;\n  },\n\n  tryCatch(promise) {\n   return promise\n     .then(data => data)\n     .catch(err => {\n       console.error('Error:',err);\n       return {};\n     });\n  },\n\n  contains(item, list) {\n    return valid(list.indexOf(item));\n  }\n\n} // module.exports\n\n\nfunction valid(index) {\n  return index !== -1;\n}\n\nfunction needsHint(hint) {\n  return hint.replace(/\\[\\]/g, '').trim().length !== 0;\n}\n\nfunction maxChars(hint) {\n  const missingCharRegex = /\\[.*?\\]/g;\n  const missingChars = (hint.match(missingCharRegex) || []).length\n  const gimmeChars = hint.replace(missingCharRegex, '').replace(/[\\s+\\(\\)]/g, '').length;\n\n  return missingChars + gimmeChars;\n}\n\nfunction minChars(hint) {\n  const optionalChars = (hint.match(/\\?/g) || []).length\n  return maxChars(hint) - optionalChars;\n}\n\nfunction minMaxChars(hint) {\n  return [minChars(hint), maxChars(hint)];\n}\n\nfunction formatHint(expression) {\n  const legend = expression.match(/\\:\\:.+?\\:\\:(.+?)\\}\\}/)[1];\n  const normalized = groupMultiXs(groupXs(groupQuestionMarks(legend)));\n\n  return flatten(split(normalized)).map(group => {\n    if (group === '.')\n      return '[]';\n\n    if (group === '-')\n      return '[] [] [] [] []'\n\n    if (/\\?/.test(group)) {\n      const result = [];\n      const numChars = Number(group.match(/\\d+/)[0])\n      for (let i = 0; i < numChars; i++)\n        result.push('[?]')\n\n      if (result.length === 1)\n        return '[?]';\n\n      return '(' + result.join(' ') + ')'\n    }\n\n    if (/≠/.test(group)) {\n      const negatedChars = group.replace(/≠/g, '');\n      return `[≠${negatedChars}]`\n    }\n    // else (character gimme)\n    return group;\n  }).join(' ');\n}\n\nfunction groupQuestionMarks(string) {\n  return string.replace(/(\\?+)/g, (match, p1) => `(${p1.length}?)`);\n}\n\nfunction groupXs(string) {\n  return string.replace(/≠[^(]/g, '($&)');\n}\n\nfunction groupMultiXs(string) {\n  return string.replace(/≠\\((.*)\\)/g, '(≠$1)')\n}\n\nfunction split(str) {\n  return str.split(/[\\(\\)]/)\n            .map(group =>\n              /\\?|≠/.test(group)\n              ? group\n              : group.split('')\n            );\n}\n\nfunction scalar(v) {\n  return !Array.isArray(v);\n}\n\nfunction flatten(deep, flat = []) {\n  if (deep.length === 0)\n    return flat;\n\n  let [head, ...tail] = deep;\n  return scalar(head)\n    ? flatten(tail, flat.concat(head))\n    : flatten(tail, flat.concat(flatten(head)));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 6\n// module chunks = 0","if (process.env.NODE_ENV == 'dev')\n  require('dotenv').config();\n\nconst express = require('express');\nconst app = express();\nconst path = require('path');\nconst bodyParser = require('body-parser');\nconst twitterBot = require('./twitterBot');\n\napp.set('port', (process.env.PORT || 3000));\napp.use(express.static(path.resolve(__dirname, '../dist')));\napp.use(bodyParser.json());\n\nrequire('./api')(app);\n\n//twitterBot.start();\n\napp.listen(app.get('port'), () =>\n  console.log('Listening on port', app.get('port'))\n);\n\nexports = module.exports = app;\n\n\n\n// WEBPACK FOOTER //\n// ./src/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 9\n// module chunks = 0","const DB = require('./dbOps');\nconst {\n  HOURS,\n  addQuestionLink,\n  calculateScore,\n  contains,\n  extractAnswer,\n  getFollowing,\n  getTimeUntil,\n  postMedia,\n  tryCatch\n} = require('Utils');\nconst Twitter = require('./twitterConfig');\nconst { TWITTER_ACCOUNT } = process.env;\n\nconst ANSWER_INTERVAL = 40000;\nlet QUESTION_INTERVAL = 10000;\n\nmodule.exports = {\n  start: () => {\n    openStream();\n    setInterval(tweetRandomQuestion, QUESTION_INTERVAL)\n  }\n  // start: () => {\n  //   openStream();\n  //   setStartTimes();\n  // }\n};\n\nfunction setStartTimes() {\n  const timeUntil7PM = getTimeUntil(19);\n  const timeUntilMidnight = getTimeUntil(0);\n\n  setTimeout(() => {\n    setInterval(tweetRandomQuestion, QUESTION_INTERVAL);\n  }, timeUntil7PM);\n\n  setTimeout(() => {\n    setInterval(weeklyMonthlyReset, 24*HOURS);\n  }, timeUntilMidnight);\n}\n\nasync function tweetRandomQuestion() {\n  const {\n    cardId,\n    questionText,\n    questionImg,\n    questionAltText,\n    prevLineImg,\n    prevLineAltText,\n    answers\n  } = await tryCatch(DB.getRandomQuestion());\n  if (!cardId) return;\n\n  const {\n    questionId,\n    questionPostedAt,\n    mediaUrls\n  } = await tryCatch(\n    postMedia(\n      questionText,\n      questionImg,\n      questionAltText,\n      prevLineImg,\n      prevLineAltText\n    )\n  );\n\n  const liveQuestion = {\n    cardId,\n    questionId,\n    answers,\n    questionPostedAt,\n    cachedPoints: [],\n    alreadyAnswered: []\n  };\n  DB.addLiveQuestion(liveQuestion, mediaUrls);\n  setTimeout(() => tweetAnswer(cardId, questionId), ANSWER_INTERVAL);\n}\n\nasync function tweetAnswer(cardId, questionId) {\n  const {\n    answerText,\n    answerImg,\n    answerAltText\n  } = await tryCatch(\n    // EFFECTS:\n    // - removes question from liveQuestions\n    // - adds cached points to scoreboard\n    //\n    // RETURNS:\n    // AnswerCard\n    DB.revealAnswerWorkflow(cardId)\n  );\n\n  const { mediaUrls } = await tryCatch(\n    postMedia(\n      addQuestionLink(answerText, questionId),\n      answerImg,\n      answerAltText\n    )\n  );\n\n  DB.addMediaUrlsToCard(cardId, mediaUrls);\n}\n\nfunction openStream() {\n  const stream = Twitter.stream('statuses/filter', { track: `@${TWITTER_ACCOUNT}` });\n\n  stream.on('tweet', async ({\n    in_reply_to_status_id_str: questionId,\n    created_at: answerPostedAt,\n    text,\n    user: {\n      id: userId,\n      name,\n      screen_name: handle,\n      profile_image_url_https: avatar,\n      profile_banner_url: profileBanner\n    }\n  }) => {\n    const liveQuestions = await tryCatch(DB.getLiveQuestions());\n    const foundQuestion = liveQuestions.filter(\n      obj => obj.questionId === questionId\n    )[0];\n\n    if (foundQuestion) {\n      const {\n        alreadyAnswered,\n        answers: acceptedAnswers\n      } = foundQuestion;\n      if (contains(userId, alreadyAnswered))\n        return;\n\n      const userAnswer = extractAnswer(text);\n      if (contains(userAnswer, acceptedAnswers)) {\n        const points = calculateScore(answerPostedAt, foundQuestion);\n        const following = await tryCatch(getFollowing(userId));\n        const newUser = {\n          userId,\n          name,\n          handle,\n          avatar,\n          profileBanner,\n          following,\n          score: 0,\n          monthlyScore: 0,\n          weeklyScore: 0,\n          correctAnswers: []\n        };\n        DB.addOrUpdateUser(newUser);\n        DB.updateLiveQuestion(questionId, { userId, points });\n\n      } else {\n        DB.updateLiveQuestion(questionId, { userId, points: 0 });\n      }\n    }\n  });\n\n  stream.on('disconnect', (disconnectMsg) => {\n    console.error('Tweet stream disconnected:', disconnectMsg);\n    setTimeout(() => stream.start(), 100);\n  });\n}\n\nfunction weeklyMonthlyReset() {\n  const now = Date.now();\n  const resetWeeklyScore = now.getDay() === 0;\n  const resetMonthlyScore = now.getDate() === 1;\n\n  if (resetWeeklyScore || resetMonthlyScore)\n    DB.weeklyMonthlyReset(resetWeeklyScore, resetMonthlyScore);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/twitterBot.js","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 11\n// module chunks = 0","const fs = require('fs');\nconst PNG = require('pngjs2').PNG;\nconst path = require('path');\nconst unzip = require('unzip-stream');\nconst UPLOADS_PATH = path.resolve(__dirname, '../uploads');\nconst {\n  formatQuestionAltText,\n  formatQuestionText,\n  formatAnswerAltText,\n  formatAnswerText,\n  getAnswers,\n  tryCatch\n} = require('Utils');\n\n\nmodule.exports = {\n  processUpload,\n  parseAnkiJson,\n  optimizeImages\n}\n\nfunction processUpload(zipfilePath) {\n  return new Promise(async (resolve, reject) => {\n    const stream = fs.createReadStream(zipfilePath)\n      .pipe(unzip.Extract({ path: 'uploads' }));\n\n    stream.on('close', async () => {\n      const files = fs.readdirSync(UPLOADS_PATH);\n      await tryCatch(optimizeImages(UPLOADS_PATH + '/media'));\n      console.log('Finished optimizing images!');\n      const newCards = extractCardInfo(files);\n\n      cleanUp(files);\n      resolve(newCards);\n    });\n  });\n}\n\nfunction optimizeImages(dirPath) {\n  return new Promise((resolve, reject) => {\n    const filesProcessing = [];\n    fs.readdirSync(dirPath).forEach(file => {\n      if (/.*\\.png$/.test(file)) {\n        const currentFile = dirPath + \"/\" + file;\n        const contents = fs.readFileSync(currentFile);\n        const writeStream = fs.createWriteStream(currentFile);\n        const currentImage = new Promise((res, rej) =>\n          writeStream.on('close', res)\n        );\n        filesProcessing.push(currentImage);\n        new PNG({ filterType: 4, deflateLevel: 1 })\n          .parse(contents, (err, png) => {\n            // Give upper left pixel an opacity\n            // of 254 so Twitter won't convert\n            // to jpeg\n            png.data[3] -= 1;\n            png.pack().pipe(writeStream);\n          });\n      }\n    });\n    Promise.all(filesProcessing).then(resolve);\n  });\n}\n\nfunction extractCardInfo(files) {\n  let allNewCards = [];\n  for (let file of files) {\n    const currentFile = `${UPLOADS_PATH}/${file}`;\n    const stats = fs.statSync(currentFile);\n\n    if (stats.isFile() && file.match(/.+\\.json$/)) {\n      const newCards = parseAnkiJson(currentFile);\n      allNewCards = allNewCards.concat(newCards);\n    }\n  }\n  return allNewCards;\n}\n\nfunction parseAnkiJson(filePath) {\n  const contents = JSON.parse(fs.readFileSync(filePath, 'utf8'));\n  return contents.notes.map(card => {\n    let [\n      expression,\n      , // reading,\n      ,// japMeaning,\n      engMeaning,\n      , // officialEng,\n      questionImg,\n      answerImg,\n      , // audio\n      prevLineImg,\n      prevLineAltText,\n      altAnswers,\n      webLookup, // use for every answer so people can look up pronunciation\n                 // https://ejje.weblio.jp/content/[webLookup (e.g. 切り換える)]\n      notes,\n      cardId\n    ] = card.fields;\n\n    [expression, engMeaning, notes] = [expression, engMeaning, notes].map(stripHtml);\n    const answers = getAnswers(expression, altAnswers);\n\n    return {\n      cardId,\n      questionText:    formatQuestionText(expression, engMeaning, notes, cardId),\n      questionImg:     getBase64(questionImg),\n      questionAltText: formatQuestionAltText(expression),\n      prevLineImg:     getBase64(prevLineImg),\n      prevLineAltText,\n      answerText:      formatAnswerText(answers, engMeaning, webLookup, cardId),\n      answerImg:       getBase64(answerImg),\n      answerAltText:   formatAnswerAltText(expression),\n      answers,\n      mediaUrls: []\n    };\n  });\n}\n\nfunction stripHtml(string) {\n  return string.replace(/<.*?>|&.*;/g, '');\n}\n\nfunction getSrc(string) {\n  return (string.match(/src=\"(.+)\"/) || [,])[1];\n}\n\nfunction getBase64(string) {\n  if (!string || string.length === 0) return;\n\n  let base64;\n  try {\n    base64 = fs.readFileSync(\n      `${UPLOADS_PATH}/media/${getSrc(string)}`,\n      { encoding: 'base64' }\n    );\n  } catch (e) {\n    // returning undefined...\n  }\n  return base64;\n}\n\nfunction cleanUp(files) {\n  for (let file of files) {\n    const root = `${UPLOADS_PATH}/${file}`;\n\n    if (fs.lstatSync(root).isFile())\n      fs.unlinkSync(root);\n    else if (fs.lstatSync(root).isDirectory())\n      deleteFolderRecursive(root);\n  }\n}\n\nfunction deleteFolderRecursive(rootPath) {\n  if (fs.existsSync(rootPath)) {\n    fs.readdirSync(rootPath).forEach(file => {\n      const curPath = rootPath + \"/\" + file;\n      if (fs.lstatSync(curPath).isDirectory()) { // recurse\n        deleteFolderRecursive(curPath);\n      } else { // delete file\n        fs.unlinkSync(curPath);\n      }\n    });\n    fs.rmdirSync(rootPath);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/processAnkiJson.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"pngjs2\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pngjs2\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"unzip-stream\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"unzip-stream\"\n// module id = 15\n// module chunks = 0","const Twitter = require('../twitterConfig');\nconst { tryCatch } = require('Utils/utils');\n\nmodule.exports = {\n\n  //\n  // post a tweet with media\n  //\n  postMedia(status, b64Image1, altText1, b64Image2, altText2) {\n    return new Promise(async (resolve, reject) => {\n      const mediaId1 = await tryCatch(uploadMedia(b64Image1, altText1));\n      const media_ids = [mediaId1];\n      if (b64Image2) {\n        const mediaId2 = await tryCatch(uploadMedia(b64Image2, altText2));\n        media_ids.unshift(mediaId2);\n      }\n\n      const params = { status, media_ids, tweet_mode: 'extended' };\n      Twitter.post('statuses/update', params, (err, data, response) => {\n        if (err) {\n          console.error(err)\n          reject(\"Posting status failed.\");\n        };\n        const mediaUrls = data.extended_entities.media.map(\n          obj => obj.media_url_https\n        );\n        const result = {\n          questionId:       data.id_str,\n          questionPostedAt: data.created_at,\n          mediaUrls\n        };\n        resolve(result);\n      });\n    });\n  },\n\n  getFollowing(userId) {\n    return new Promise((resolve, reject) => {\n      Twitter.get('friends/ids', { userId }, (err, data, response) => {\n        if (err) console.error(err);\n        resolve(data.ids);\n      });\n    });\n  }\n\n} // module.exports\n\n\n// EFFECTS:\n// uploads a single image with altText to Twitter\n//\n// RETURNS:\n// media_id which is necessary for\n// attaching media to a tweet\n//\nfunction uploadMedia(b64Image, altText) {\n  return new Promise((resolve, reject) => {\n    // first we must post the media to Twitter\n    Twitter.post('media/upload', { media_data: b64Image }, (err, data, response) => {\n      if (err) {\n        console.error(err);\n        reject(\"Media upload failed.\")\n        return;\n      }\n      // now we can assign alt text to the media, for use by screen readers and\n      // other text-based presentations and interpreters\n      const mediaIdStr = data.media_id_string;\n      const meta_params = { media_id: mediaIdStr, alt_text: { text: altText } }\n\n      Twitter.post('media/metadata/create', meta_params, (err, data, response) => {\n        if (err) {\n          console.error(err);\n          reject(\"Media upload succeeded, media creation failed.\");\n        }\n        // now we can reference the media and post a tweet (media will attach to the tweet)\n        resolve(mediaIdStr);\n      });\n    });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/twitterUtils.js","module.exports = require(\"twit\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"twit\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"urlencode\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"urlencode\"\n// module id = 18\n// module chunks = 0","const DB = require('./dbOps');\nconst upload = require('multer')({ dest: 'uploads/' });\n\nmodule.exports = (app) => {\n\n  // CORS\n  app.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET, OPTIONS');\n    res.header('Access-Control-Max-Age', '86400'); // 24 hours\n    res.header('Access-Control-Allow-Headers',\n               'Origin, X-Requested-With, Content-Type, Accept');\n    next();\n  });\n\n  app.get('/api/scores', (req, res) => {\n    DB.getScores(req, res);\n  });\n\n  app.get('/api/score/:handle', (req, res) => {\n    DB.getScore(req, res);\n  });\n\n  app.get('/api/cards/old', (req, res) => {\n    DB.getOldCards(req, res);\n  });\n\n\n  // TODO - add authentication to following endpoints\n\n  app.post('/deck/new', upload.single('zipfile'), (req, res) => {\n    DB.addDeck(req, res);\n  });\n\n  app.post('/scores/edit', (req, res) => {\n    DB.adjustScore(req, res);\n  });\n\n  app.get('/cards/new', (req, res) => {\n    DB.getNewCards(req, res);\n  });\n\n} // module.exports\n\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}